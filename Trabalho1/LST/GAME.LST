     1                                  global game_loop, reset_game
     2                                  global n_jogadas, vitoria
     3                                  extern matriz_tabela, jogador_anterior, proximo_jogador
     4                                  extern verify_winner, match_draw, match_win
     5                                  extern draw_position, cmd_handler, draw_current_cmd, double_play, clear_character, clear_cmd
     6                                  extern cmd, cmd_end, prox_posicao, fecha_jogo, reseta_jogo
     7                                  extern len_campo_input, altura_input
     8                                  
     9                                  
    10                                  segment code
    11                                  ..start:
    12                                  game_loop:
    13 00000000 9C                          pushf
    14 00000001 50                          push 		ax
    15 00000002 53                          push 		bx
    16 00000003 51                          push		cx
    17 00000004 52                          push		dx
    18 00000005 56                          push		si
    19 00000006 57                          push		di
    20 00000007 55                          push		bp
    21                                  
    22                                  game_loop1:
    23 00000008 813E[0000]0900              cmp word[n_jogadas],9
    24 0000000E 7422                        je game_draw
    25 00000010 813E[0200]0100              cmp word[vitoria],1
    26 00000016 7420                        je game_win
    27 00000018 E8(0000)                    call cmd_handler
    28 0000001B E8(0000)                    call draw_current_cmd
    29 0000001E 813E[0000]0100              cmp word[cmd_end],1
    30 00000024 7437                        je process_cmd
    31 00000026 E9DFFF                      jmp game_loop1
    32                                  
    33                                  game_loop_end:
    34 00000029 5D                          pop		bp
    35 0000002A 5F                          pop		di
    36 0000002B 5E                          pop		si
    37 0000002C 5A                          pop		dx
    38 0000002D 59                          pop		cx
    39 0000002E 5B                          pop		bx
    40 0000002F 58                          pop		ax
    41 00000030 9D                          popf
    42 00000031 C3                          ret
    43                                  
    44                                  game_draw:
    45 00000032 E8(0000)                    call match_draw
    46 00000035 E90600                      jmp game_end
    47                                  
    48                                  game_win:
    49 00000038 E8(0000)                    call match_win
    50 0000003B E90000                      jmp game_end
    51                                  
    52                                  game_end:
    53 0000003E C706[0000]0000              mov word[cmd_end],0
    54 00000044 E8(0000)                    call cmd_handler
    55 00000047 E8(0000)                    call draw_current_cmd
    56 0000004A 813E[0000]0100              cmp word[cmd_end],1
    57 00000050 75EC                        jne game_end
    58 00000052 813E[0000]0100              cmp word[prox_posicao],1
    59 00000058 7458                        je verify_c_s2
    60 0000005A E9E1FF                      jmp game_end
    61                                  
    62                                  process_cmd:
    63 0000005D 813E[0000]0100              cmp word[prox_posicao],1
    64 00000063 743C                        je verify_c_s
    65                                  
    66                                  process_cmd1:
    67 00000065 B90200                      mov cx,2 ; valor respectivo ao numero de coordenadas, no caso 2 para l e c
    68 00000068 31F6                        xor si,si
    69                                  
    70 0000006A 8A84[0000]                  mov al,[si+cmd]
    71 0000006E 50                          push ax
    72 0000006F 46                          inc si
    73                                  stack_cmd:
    74 00000070 8A84[0000]                  mov al,[si+cmd]
    75 00000074 2C30                        sub al,30h
    76 00000076 50                          push ax
    77 00000077 46                          inc si
    78 00000078 E2F6                        loop stack_cmd
    79                                  
    80 0000007A C706[0000]0000              mov word[cmd_end],0
    81 00000080 C706[0000]0000              mov word[prox_posicao],0
    82                                  
    83 00000086 E8(0000)                    call draw_position
    84                                  
    85 00000089 B8[0000]                    mov ax,len_campo_input
    86 0000008C 50                          push ax
    87 0000008D B80300                      mov ax,3
    88 00000090 50                          push ax
    89 00000091 B8[0000]                    mov ax,altura_input
    90 00000094 50                          push ax
    91 00000095 E8(0000)                    call clear_character
    92 00000098 E8(0000)                    call clear_cmd
    93                                  
    94 0000009B E8(0000)                    call verify_winner
    95                                  
    96 0000009E E967FF                      jmp game_loop1
    97                                  
    98                                  verify_c_s:
    99 000000A1 803E[0000]63                cmp byte[cmd],'c'
   100 000000A6 741B                        je c_handler
   101 000000A8 803E[0000]73                cmp byte[cmd],'s'
   102 000000AD 741D                        je s_handler
   103 000000AF E9B3FF                      jmp process_cmd1
   104                                  
   105                                  verify_c_s2:
   106 000000B2 803E[0000]63                cmp byte[cmd],'c'
   107 000000B7 740A                        je c_handler
   108 000000B9 803E[0000]73                cmp byte[cmd],'s'
   109 000000BE 740C                        je s_handler
   110 000000C0 E97BFF                      jmp game_end
   111                                  
   112                                  c_handler:
   113 000000C3 C706[0000]0100              mov word[reseta_jogo],1
   114 000000C9 E95DFF                      jmp game_loop_end
   115                                  
   116                                  s_handler:
   117 000000CC C706[0000]0100              mov word[fecha_jogo],1
   118 000000D2 E954FF                      jmp game_loop_end
   119                                  
   120                                  reset_game:
   121 000000D5 9C                          pushf
   122 000000D6 50                          push 		ax
   123 000000D7 53                          push 		bx
   124 000000D8 51                          push		cx
   125 000000D9 52                          push		dx
   126 000000DA 56                          push		si
   127 000000DB 57                          push		di
   128 000000DC 55                          push		bp
   129                                  
   130 000000DD C706[0000]0000              mov word[reseta_jogo],0
   131 000000E3 C706[0000]0000              mov word[prox_posicao],0
   132 000000E9 C706[0000]0000              mov word[cmd_end],0
   133 000000EF C706[0000]2000              mov word[jogador_anterior],' '
   134 000000F5 C706[0000]2000              mov word[proximo_jogador],' '
   135 000000FB C706[0000]0000              mov word[n_jogadas],0
   136 00000101 C706[0200]0000              mov word[vitoria],0
   137                                  
   138                                  
   139 00000107 B90900                      mov cx, 9 ; número de posições na tabela
   140 0000010A 31DB                        xor bx,bx
   141                                  clear_matrix:
   142 0000010C C687[0000]20                mov byte[bx+matriz_tabela],' '
   143 00000111 43                          inc bx
   144 00000112 E2F8                        loop clear_matrix
   145                                  
   146 00000114 E8(0000)                    call clear_cmd
   147                                  
   148 00000117 5D                          pop		bp
   149 00000118 5F                          pop		di
   150 00000119 5E                          pop		si
   151 0000011A 5A                          pop		dx
   152 0000011B 59                          pop		cx
   153 0000011C 5B                          pop		bx
   154 0000011D 58                          pop		ax
   155 0000011E 9D                          popf
   156 0000011F C3                          ret
   157                                  
   158                                  segment data
   159                                  ; variável responsável por armazenar quantas jogadas foram feitas no jogo
   160 00000000 0000                        n_jogadas   dw  0
   161                                  
   162                                  ; variável responsável por armazenar se um jogador venceu a partida
   163 00000002 0000                        vitoria     dw  0
   164                                  segment stack stack
   165 00000000 <res 00000080>              resb 128
   166                                  stacktop:
