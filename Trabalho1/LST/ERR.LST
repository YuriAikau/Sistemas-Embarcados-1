     1                                  global invalid_player, double_play, invalid_position, clear_header
     2                                  extern cursor, caracter
     3                                  extern proximo_jogador
     4                                  extern cor, branco_intenso, amarelo, magenta_claro, cyan_claro
     5                                  
     6                                  segment code
     7                                  ..start:
     8                                  
     9                                  invalid_player:
    10 00000000 9C                          pushf
    11 00000001 50                          push 		ax
    12 00000002 53                          push 		bx
    13 00000003 51                          push		cx
    14 00000004 52                          push		dx
    15 00000005 56                          push		si
    16 00000006 57                          push		di
    17 00000007 55                          push		bp
    18                                  
    19 00000008 B91100                      mov cx, 17 ; número de caracteres na mensagem de erro
    20 0000000B 31DB                        xor bx,bx
    21 0000000D B61B                        mov dh,27
    22 0000000F B216                        mov dl,22
    23 00000011 C706[0000][0000]            mov word[cor], amarelo
    24                                  
    25                                  err_invalid_player:
    26 00000017 E8(0000)                    call	cursor
    27 0000001A 8A87[1E00]                  mov     al,[bx+jogador_invalido]
    28 0000001E E8(0000)                    call	caracter
    29 00000021 43                          inc     bx			;proximo caracter
    30 00000022 FEC2                        inc		dl			;avanca a coluna
    31 00000024 E2F1                        loop    err_invalid_player
    32                                  
    33 00000026 5F                          pop		di
    34 00000027 5E                          pop		si
    35 00000028 5A                          pop		dx
    36 00000029 59                          pop		cx
    37 0000002A 5B                          pop		bx
    38 0000002B 58                          pop		ax
    39 0000002C 9D                          popf
    40 0000002D 5D                          pop		bp
    41 0000002E C3                          ret
    42                                  
    43                                  double_play:
    44 0000002F 9C                          pushf
    45 00000030 50                          push 		ax
    46 00000031 53                          push 		bx
    47 00000032 51                          push		cx
    48 00000033 52                          push		dx
    49 00000034 56                          push		si
    50 00000035 57                          push		di
    51 00000036 55                          push		bp
    52                                  
    53 00000037 B91E00                      mov cx, 30 ; número de caracteres na mensagem de erro
    54 0000003A 31DB                        xor bx,bx
    55 0000003C B61B                        mov dh,27
    56 0000003E B216                        mov dl,22
    57 00000040 C706[0000][0000]            mov word[cor], branco_intenso
    58                                  
    59                                  err_dup_play:
    60 00000046 E8(0000)                    call	cursor
    61 00000049 8A87[0000]                  mov     al,[bx+jogada_dupla]
    62 0000004D E8(0000)                    call	caracter
    63 00000050 43                          inc     bx			;proximo caracter
    64 00000051 FEC2                        inc		dl			;avanca a coluna
    65 00000053 E2F1                        loop    err_dup_play
    66                                  
    67 00000055 813E[0000]5800              cmp word[proximo_jogador],'X'
    68 0000005B 7418                        je red_x
    69 0000005D C706[0000][0000]            mov word[cor], cyan_claro
    70                                  
    71                                  next_player_draw
    72 00000063 E8(0000)                    call	cursor
    73 00000066 A0[0000]                    mov     al,[proximo_jogador]
    74 00000069 E8(0000)                    call	caracter
    75                                  
    76 0000006C 5F                          pop		di
    77 0000006D 5E                          pop		si
    78 0000006E 5A                          pop		dx
    79 0000006F 59                          pop		cx
    80 00000070 5B                          pop		bx
    81 00000071 58                          pop		ax
    82 00000072 9D                          popf
    83 00000073 5D                          pop		bp
    84 00000074 C3                          ret
    85                                  
    86                                  red_x:
    87 00000075 C706[0000][0000]            mov word[cor], magenta_claro
    88 0000007B E9E5FF                      jmp next_player_draw
    89                                  invalid_position:
    90 0000007E 9C                          pushf
    91 0000007F 50                          push 		ax
    92 00000080 53                          push 		bx
    93 00000081 51                          push		cx
    94 00000082 52                          push		dx
    95 00000083 56                          push		si
    96 00000084 57                          push		di
    97 00000085 55                          push		bp
    98                                  
    99 00000086 B91100                      mov cx, 17 ; número de caracteres na mensagem de erro
   100 00000089 31DB                        xor bx,bx
   101 0000008B B61B                        mov dh,27
   102 0000008D B216                        mov dl,22
   103 0000008F C706[0000][0000]            mov word[cor], amarelo
   104                                  
   105                                  err_invalid_position:
   106 00000095 E8(0000)                    call	cursor
   107 00000098 8A87[2F00]                  mov     al,[bx+posicao_invalida]
   108 0000009C E8(0000)                    call	caracter
   109 0000009F 43                          inc     bx			;proximo caracter
   110 000000A0 FEC2                        inc		dl			;avanca a coluna
   111 000000A2 E2F1                        loop    err_invalid_position
   112                                  
   113 000000A4 5F                          pop		di
   114 000000A5 5E                          pop		si
   115 000000A6 5A                          pop		dx
   116 000000A7 59                          pop		cx
   117 000000A8 5B                          pop		bx
   118 000000A9 58                          pop		ax
   119 000000AA 9D                          popf
   120 000000AB 5D                          pop		bp
   121 000000AC C3                          ret
   122                                  
   123                                  ; limpa o cabeçalho antes de escrever nele
   124                                  clear_header:
   125 000000AD 9C                          pushf
   126 000000AE 50                          push 		ax
   127 000000AF 53                          push 		bx
   128 000000B0 51                          push		cx
   129 000000B1 52                          push		dx
   130 000000B2 56                          push		si
   131 000000B3 57                          push		di
   132 000000B4 55                          push        bp
   133 000000B5 B93A00                      mov cx, 58 ; número de caracteres possíveis na mensagem de erro
   134 000000B8 31DB                        xor bx,bx
   135 000000BA B61B                        mov dh,27
   136 000000BC B216                        mov dl,22
   137 000000BE C706[0000][0000]            mov word[cor], branco_intenso
   138                                  
   139                                  clearer:
   140 000000C4 E8(0000)                    call	cursor
   141 000000C7 B020                        mov     al,' '
   142 000000C9 E8(0000)                    call	caracter
   143 000000CC FEC2                        inc		dl			;avanca a coluna
   144 000000CE E2F4                        loop    clearer
   145                                  
   146 000000D0 5D                          pop		bp
   147 000000D1 5F                          pop		di
   148 000000D2 5E                          pop		si
   149 000000D3 5A                          pop		dx
   150 000000D4 59                          pop		cx
   151 000000D5 5B                          pop		bx
   152 000000D6 58                          pop		ax
   153 000000D7 9D                          popf
   154 000000D8 C3                          ret
   155                                  
   156                                  segment data
   157                                  ; mensagens de status
   158 00000000 566F6365206A61206A-         jogada_dupla        db      'Voce ja jogou, vez do jogador '
   159 00000009 6F676F752C2076657A-
   160 00000012 20646F206A6F676164-
   161 0000001B 6F7220             
   162 0000001E 4A6F6761646F722069-         jogador_invalido    db      'Jogador invalido!'
   163 00000027 6E76616C69646F21   
   164 0000002F 506F736963616F2069-         posicao_invalida    db      'Posicao invalida!'
   165 00000038 6E76616C69646121   
   166                                  
   167                                  segment stack stack
   168 00000000 <res 00000200>              resb 512
   169                                  stacktop:
