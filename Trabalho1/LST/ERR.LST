     1                                  global invalid_player, double_play, invalid_position, clear_character
     2                                  extern cursor, caracter
     3                                  extern proximo_jogador
     4                                  extern cor, branco_intenso, amarelo, magenta_claro, cyan_claro
     5                                  
     6                                  segment code
     7                                  ..start:
     8                                  
     9                                  ; função responsável por escrever o erro na tela correspondente ao jogador ser inválido
    10                                  invalid_player:
    11 00000000 9C                          pushf
    12 00000001 50                          push 		ax
    13 00000002 53                          push 		bx
    14 00000003 51                          push		cx
    15 00000004 52                          push		dx
    16 00000005 56                          push		si
    17 00000006 57                          push		di
    18 00000007 55                          push		bp
    19                                  
    20 00000008 B91100                      mov cx, 17 ; número de caracteres na mensagem de erro
    21 0000000B 31DB                        xor bx,bx
    22 0000000D B61B                        mov dh,27
    23 0000000F B216                        mov dl,22
    24 00000011 C706[0000][0000]            mov word[cor], amarelo
    25                                  
    26                                  err_invalid_player:
    27 00000017 E8(0000)                    call	cursor
    28 0000001A 8A87[1E00]                  mov     al,[bx+jogador_invalido]
    29 0000001E E8(0000)                    call	caracter
    30 00000021 43                          inc     bx			;proximo caracter
    31 00000022 FEC2                        inc		dl			;avanca a coluna
    32 00000024 E2F1                        loop    err_invalid_player
    33                                  
    34 00000026 5F                          pop		di
    35 00000027 5E                          pop		si
    36 00000028 5A                          pop		dx
    37 00000029 59                          pop		cx
    38 0000002A 5B                          pop		bx
    39 0000002B 58                          pop		ax
    40 0000002C 9D                          popf
    41 0000002D 5D                          pop		bp
    42 0000002E C3                          ret
    43                                  
    44                                  ; função responsável por escrever o erro na tela correspondente ao jogador tentar jogar 2 vezes seguidas
    45                                  double_play:
    46 0000002F 9C                          pushf
    47 00000030 50                          push 		ax
    48 00000031 53                          push 		bx
    49 00000032 51                          push		cx
    50 00000033 52                          push		dx
    51 00000034 56                          push		si
    52 00000035 57                          push		di
    53 00000036 55                          push		bp
    54                                  
    55 00000037 B91E00                      mov cx, 30 ; número de caracteres na mensagem de erro
    56 0000003A 31DB                        xor bx,bx
    57 0000003C B61B                        mov dh,27
    58 0000003E B216                        mov dl,22
    59 00000040 C706[0000][0000]            mov word[cor], branco_intenso
    60                                  
    61                                  err_dup_play:
    62 00000046 E8(0000)                    call	cursor
    63 00000049 8A87[0000]                  mov     al,[bx+jogada_dupla]
    64 0000004D E8(0000)                    call	caracter
    65 00000050 43                          inc     bx			;proximo caracter
    66 00000051 FEC2                        inc		dl			;avanca a coluna
    67 00000053 E2F1                        loop    err_dup_play
    68                                  
    69 00000055 813E[0000]5800              cmp word[proximo_jogador],'X'
    70 0000005B 7418                        je red_x
    71 0000005D C706[0000][0000]            mov word[cor], cyan_claro
    72                                  
    73                                  next_player_draw
    74 00000063 E8(0000)                    call	cursor
    75 00000066 A0[0000]                    mov     al,[proximo_jogador]
    76 00000069 E8(0000)                    call	caracter
    77                                  
    78 0000006C 5F                          pop		di
    79 0000006D 5E                          pop		si
    80 0000006E 5A                          pop		dx
    81 0000006F 59                          pop		cx
    82 00000070 5B                          pop		bx
    83 00000071 58                          pop		ax
    84 00000072 9D                          popf
    85 00000073 5D                          pop		bp
    86 00000074 C3                          ret
    87                                  
    88                                  red_x:
    89 00000075 C706[0000][0000]            mov word[cor], magenta_claro
    90 0000007B E9E5FF                      jmp next_player_draw
    91                                  
    92                                  ; função responsável por escrever o erro na tela correspondente à posição na tabela se inválida
    93                                  invalid_position:
    94 0000007E 9C                          pushf
    95 0000007F 50                          push 		ax
    96 00000080 53                          push 		bx
    97 00000081 51                          push		cx
    98 00000082 52                          push		dx
    99 00000083 56                          push		si
   100 00000084 57                          push		di
   101 00000085 55                          push		bp
   102                                  
   103 00000086 B91100                      mov cx, 17 ; número de caracteres na mensagem de erro
   104 00000089 31DB                        xor bx,bx
   105 0000008B B61B                        mov dh,27
   106 0000008D B216                        mov dl,22
   107 0000008F C706[0000][0000]            mov word[cor], amarelo
   108                                  
   109                                  err_invalid_position:
   110 00000095 E8(0000)                    call	cursor
   111 00000098 8A87[2F00]                  mov     al,[bx+posicao_invalida]
   112 0000009C E8(0000)                    call	caracter
   113 0000009F 43                          inc     bx			;proximo caracter
   114 000000A0 FEC2                        inc		dl			;avanca a coluna
   115 000000A2 E2F1                        loop    err_invalid_position
   116                                  
   117 000000A4 5F                          pop		di
   118 000000A5 5E                          pop		si
   119 000000A6 5A                          pop		dx
   120 000000A7 59                          pop		cx
   121 000000A8 5B                          pop		bx
   122 000000A9 58                          pop		ax
   123 000000AA 9D                          popf
   124 000000AB 5D                          pop		bp
   125 000000AC C3                          ret
   126                                  
   127                                  ; limpa todos os caracteres de uma linha que não sejam parte do texto da tabela
   128                                  ; push n_caracteres; push altura_linha; call clear_character
   129                                  clear_character:
   130 000000AD 55                          push        bp
   131 000000AE 89E5                        mov         bp,sp
   132 000000B0 9C                          pushf
   133 000000B1 50                          push 		ax
   134 000000B2 53                          push 		bx
   135 000000B3 51                          push		cx
   136 000000B4 52                          push		dx
   137 000000B5 56                          push		si
   138 000000B6 57                          push		di
   139                                  
   140 000000B7 8B4606                      mov ax,[bp+6] ; recupera o número de caracteres "permanentes" da linha
   141                                  
   142 000000BA B94E00                      mov cx,78
   143 000000BD 29C1                        sub cx,ax ; número de caracteres possíveis na mensagem de erro
   144 000000BF 25FF00                      and ax,00FFh
   145 000000C2 0402                        add al,2
   146 000000C4 88C2                        mov dl,al
   147                                  
   148 000000C6 8B4604                      mov ax,[bp+4] ; valor correspondente ao número da linha
   149 000000C9 25FF00                      and ax,00FFh
   150 000000CC 88C6                        mov dh,al
   151 000000CE C706[0000][0000]            mov word[cor], branco_intenso
   152                                  
   153                                  clearer:
   154 000000D4 E8(0000)                    call	cursor
   155 000000D7 B020                        mov     al,' '
   156 000000D9 E8(0000)                    call	caracter
   157 000000DC FEC2                        inc		dl			;avanca a coluna
   158 000000DE E2F4                        loop    clearer
   159                                  
   160 000000E0 5F                          pop		di
   161 000000E1 5E                          pop		si
   162 000000E2 5A                          pop		dx
   163 000000E3 59                          pop		cx
   164 000000E4 5B                          pop		bx
   165 000000E5 58                          pop		ax
   166 000000E6 9D                          popf
   167 000000E7 5D                          pop		bp
   168 000000E8 C20400                      ret     4
   169                                  
   170                                  segment data
   171                                  ; mensagens de status
   172 00000000 566F6365206A61206A-         jogada_dupla        db      'Voce ja jogou, vez do jogador '
   173 00000009 6F676F752C2076657A-
   174 00000012 20646F206A6F676164-
   175 0000001B 6F7220             
   176 0000001E 4A6F6761646F722069-         jogador_invalido    db      'Jogador invalido!'
   177 00000027 6E76616C69646F21   
   178 0000002F 506F736963616F2069-         posicao_invalida    db      'Posicao invalida!'
   179 00000038 6E76616C69646121   
   180                                  
   181                                  segment stack stack
   182 00000000 <res 00000200>              resb 512
   183                                  stacktop:
