     1                                  extern circle, line, cursor, caracter
     2                                  extern cor, azul, vermelho, branco_intenso, amarelo
     3                                  global draw_table, draw_position
     4                                  segment code
     5                                  ..start:
     6                                  
     7                                  draw_table:
     8 00000000 9C                          pushf
     9 00000001 50                          push 		ax
    10 00000002 53                          push 		bx
    11 00000003 51                          push		cx
    12 00000004 52                          push		dx
    13 00000005 56                          push		si
    14 00000006 57                          push		di
    15 00000007 55                          push		bp
    16                                  
    17                                      ; desenhando o fundo do jogo da velha
    18 00000008 C706[0000][0000]            mov		word[cor],branco_intenso
    19 0000000E B81400                      mov		ax,offset_tabela_x
    20 00000011 50                          push		ax
    21 00000012 B8AA00                      mov		ax,170
    22 00000015 50                          push		ax
    23 00000016 B86C02                      mov		ax,fim_tabela_x
    24 00000019 50                          push		ax
    25 0000001A B8AA00                      mov		ax,170
    26 0000001D 50                          push		ax
    27 0000001E E8(0000)                    call		line
    28                                  
    29 00000021 C706[0000][0000]            mov		word[cor],branco_intenso
    30 00000027 B81400                      mov		ax,offset_tabela_x
    31 0000002A 50                          push		ax
    32 0000002B B83601                      mov		ax,310
    33 0000002E 50                          push		ax
    34 0000002F B86C02                      mov		ax,fim_tabela_x
    35 00000032 50                          push		ax
    36 00000033 B83601                      mov		ax,310
    37 00000036 50                          push		ax
    38 00000037 E8(0000)                    call		line
    39                                  
    40 0000003A C706[0000][0000]            mov		word[cor],branco_intenso
    41 00000040 B8DC00                      mov		ax,220
    42 00000043 50                          push		ax
    43 00000044 B81E00                      mov		ax,offset_tabela_y
    44 00000047 50                          push		ax
    45 00000048 B8DC00                      mov		ax,220
    46 0000004B 50                          push		ax
    47 0000004C B8C201                      mov		ax,fim_tabela_y
    48 0000004F 50                          push		ax
    49 00000050 E8(0000)                    call		line
    50                                  
    51 00000053 C706[0000][0000]            mov		word[cor],branco_intenso
    52 00000059 B8A401                      mov		ax,420
    53 0000005C 50                          push		ax
    54 0000005D B81E00                      mov		ax,offset_tabela_y
    55 00000060 50                          push		ax
    56 00000061 B8A401                      mov		ax,420
    57 00000064 50                          push		ax
    58 00000065 B8C201                      mov		ax,fim_tabela_y
    59 00000068 50                          push		ax
    60 00000069 E8(0000)                    call		line
    61                                  
    62 0000006C 5D                          pop		bp
    63 0000006D 5F                          pop		di
    64 0000006E 5E                          pop		si
    65 0000006F 5A                          pop		dx
    66 00000070 59                          pop		cx
    67 00000071 5B                          pop		bx
    68 00000072 58                          pop		ax
    69 00000073 9D                          popf
    70 00000074 C3                          ret
    71                                  
    72                                  ;_____________________________________________________________________________
    73                                  ;   funcao desenha_posicao
    74                                  ;   push symbol; push x; push y; call draw_position; (0<=x<=2) e (0<=y<=2)
    75                                  draw_position:
    76 00000075 55                          push bp
    77 00000076 89E5                        mov bp,sp
    78 00000078 9C                          pushf
    79 00000079 50                          push 		ax
    80 0000007A 53                          push 		bx
    81 0000007B 51                          push		cx
    82 0000007C 52                          push		dx
    83 0000007D 56                          push		si
    84 0000007E 57                          push		di
    85                                  
    86 0000007F E86700                      call clear_header
    87 00000082 8B4608                      mov ax,[bp+8] ;caractere ASCII correspondente ao símbolo a ser desenhado
    88 00000085 3B06[0000]                  cmp ax,[jogador_anterior]
    89 00000089 7431                        je double_play
    90 0000008B 3D5800                      cmp ax,'X'
    91 0000008E 7426                        je draw_ecks1
    92 00000090 3D4F00                      cmp ax,'O'
    93 00000093 7424                        je draw_circle1
    94                                  
    95 00000095 B91100                      mov cx, 17 ; número de caracteres na mensagem de erro
    96 00000098 31DB                        xor bx,bx
    97 0000009A B600                        mov dh,0
    98 0000009C B217                        mov dl,23
    99 0000009E C706[0000][0000]            mov word[cor], amarelo
   100                                  
   101                                  err_invalid_player:
   102 000000A4 E8(0000)                    call	cursor
   103 000000A7 8A87[2200]                  mov     al,[bx+jogador_invalido]
   104 000000AB E8(0000)                    call	caracter
   105 000000AE 43                          inc     bx			;proximo caracter
   106 000000AF FEC2                        inc		dl			;avanca a coluna
   107 000000B1 E2F1                        loop    err_invalid_player
   108                                  
   109 000000B3 E9FC00                      jmp draw_position_end
   110                                  
   111                                  draw_ecks1:
   112 000000B6 E98E00                      jmp draw_ecks
   113                                  
   114                                  draw_circle1:
   115 000000B9 E95900                      jmp draw_circle
   116                                  double_play:
   117 000000BC E82A00                      call clear_header
   118 000000BF B91E00                      mov cx, 30 ; número de caracteres na mensagem de erro
   119 000000C2 31DB                        xor bx,bx
   120 000000C4 B600                        mov dh,0
   121 000000C6 B219                        mov dl,25
   122 000000C8 C706[0000][0000]            mov word[cor], branco_intenso
   123                                  
   124                                  err_dup_play:
   125 000000CE E8(0000)                    call	cursor
   126 000000D1 8A87[0400]                  mov     al,[bx+jogada_dupla]
   127 000000D5 E8(0000)                    call	caracter
   128 000000D8 43                          inc     bx			;proximo caracter
   129 000000D9 FEC2                        inc		dl			;avanca a coluna
   130 000000DB E2F1                        loop    err_dup_play
   131                                  
   132 000000DD E8(0000)                    call	cursor
   133 000000E0 A0[0200]                    mov     al,[proximo_jogador]
   134 000000E3 E8(0000)                    call	caracter
   135                                  
   136 000000E6 E9C900                      jmp draw_position_end
   137                                  
   138                                  ; limpa o cabeçalho antes de escrever nele
   139                                  clear_header:
   140 000000E9 9C                          pushf
   141 000000EA 50                          push 		ax
   142 000000EB 53                          push 		bx
   143 000000EC 51                          push		cx
   144 000000ED 52                          push		dx
   145 000000EE 56                          push		si
   146 000000EF 57                          push		di
   147 000000F0 55                          push        bp
   148 000000F1 B95000                      mov cx, 80 ; número de caracteres na mensagem de erro
   149 000000F4 31DB                        xor bx,bx
   150 000000F6 B600                        mov dh,0
   151 000000F8 B200                        mov dl,0
   152 000000FA C706[0000][0000]            mov word[cor], branco_intenso
   153                                  
   154                                  clearer:
   155 00000100 E8(0000)                    call	cursor
   156 00000103 B020                        mov     al,' '
   157 00000105 E8(0000)                    call	caracter
   158 00000108 FEC2                        inc		dl			;avanca a coluna
   159 0000010A E2F4                        loop    clearer
   160                                  
   161 0000010C 5D                          pop		bp
   162 0000010D 5F                          pop		di
   163 0000010E 5E                          pop		si
   164 0000010F 5A                          pop		dx
   165 00000110 59                          pop		cx
   166 00000111 5B                          pop		bx
   167 00000112 58                          pop		ax
   168 00000113 9D                          popf
   169 00000114 C3                          ret
   170                                  
   171                                  draw_circle:
   172 00000115 8B4606                      mov ax,[bp+6] ;posicao x da tabela (0-2)
   173 00000118 B3C8                        mov bl,largura_x
   174 0000011A F6E3                        mul bl
   175 0000011C 057800                      add ax,offset_tabela_x+(largura_x/2)
   176 0000011F 50                          push ax
   177                                  
   178 00000120 8B4604                      mov ax,[bp+4] ;posicao y da tabela (0-2)
   179 00000123 B38C                        mov bl,altura_y
   180 00000125 F6E3                        mul bl
   181 00000127 056400                      add ax,offset_tabela_y+(altura_y/2)
   182 0000012A 50                          push ax
   183                                  
   184 0000012B C706[0000][0000]            mov word[cor], azul
   185 00000131 B83200                      mov ax,(altura_y/2)-20
   186 00000134 50                          push ax
   187                                  
   188 00000135 E8(0000)                    call circle
   189                                  
   190 00000138 B84F00                      mov ax,'O'
   191 0000013B A3[0000]                    mov word[jogador_anterior],ax
   192 0000013E B85800                      mov ax,'X'
   193 00000141 A3[0200]                    mov word[proximo_jogador],ax
   194                                  
   195 00000144 E96B00                      jmp draw_position_end
   196                                  
   197                                  draw_ecks:
   198 00000147 C706[0000][0000]            mov word[cor], vermelho
   199                                  ; desenhando a primeira "barra" do X
   200 0000014D 8B4606                      mov ax,[bp+6] ;posicao x da tabela (0-2)
   201 00000150 B3C8                        mov bl,largura_x
   202 00000152 F6E3                        mul bl
   203 00000154 052800                      add ax,2*offset_tabela_x
   204 00000157 50                          push ax ; posicao x1 da função line
   205                                  
   206 00000158 8B4604                      mov ax,[bp+4] ;posicao y da tabela (0-2)
   207 0000015B B38C                        mov bl,altura_y
   208 0000015D F6E3                        mul bl
   209 0000015F 053C00                      add ax,2*offset_tabela_y
   210 00000162 50                          push ax ; posicao y1 da função line
   211                                  
   212 00000163 8B4606                      mov ax,[bp+6] ;posicao x da tabela (0-2)
   213 00000166 40                          inc ax ; pega o final do "quadradinho" da posição atual
   214 00000167 B3C8                        mov bl,largura_x
   215 00000169 F6E3                        mul bl
   216 0000016B 50                          push ax ; posicao x2 da função line
   217                                  
   218 0000016C 8B4604                      mov ax,[bp+4] ;posicao y da tabela (0-2)
   219 0000016F 40                          inc ax ; pega o final do "quadradinho" da posição atual
   220 00000170 B38C                        mov bl,altura_y
   221 00000172 F6E3                        mul bl
   222 00000174 50                          push ax ; posicao y2 da função line
   223                                  
   224 00000175 E8(0000)                    call line
   225                                  
   226                                  ; desenhando a segunda "barra" do X
   227 00000178 8B4606                      mov ax,[bp+6] ;posicao x da tabela (0-2)
   228 0000017B B3C8                        mov bl,largura_x
   229 0000017D F6E3                        mul bl
   230 0000017F 052800                      add ax,2*offset_tabela_x
   231 00000182 50                          push ax ; posicao x1 da função line
   232                                  
   233 00000183 8B4604                      mov ax,[bp+4] ;posicao y da tabela (0-2)
   234 00000186 40                          inc ax ; pega o canto superior esquerdo do "quadradinho"
   235 00000187 B38C                        mov bl,altura_y
   236 00000189 F6E3                        mul bl
   237 0000018B 50                          push ax ; posicao y1 da função line
   238                                  
   239 0000018C 8B4606                      mov ax,[bp+6] ;posicao x da tabela (0-2)
   240 0000018F 40                          inc ax ; pega o final do "quadradinho" da posição atual
   241 00000190 B3C8                        mov bl,largura_x
   242 00000192 F6E3                        mul bl
   243 00000194 50                          push ax ; posicao x2 da função line
   244                                  
   245 00000195 8B4604                      mov ax,[bp+4] ;posicao y da tabela (0-2)
   246 00000198 B38C                        mov bl,altura_y
   247 0000019A F6E3                        mul bl
   248 0000019C 053C00                      add ax, 2*offset_tabela_y
   249 0000019F 50                          push ax ; posicao y2 da função line
   250                                  
   251 000001A0 E8(0000)                    call line
   252                                  
   253 000001A3 B85800                      mov ax,'X'
   254 000001A6 A3[0000]                    mov word[jogador_anterior],ax
   255 000001A9 B84F00                      mov ax,'O'
   256 000001AC A3[0200]                    mov word[proximo_jogador],ax
   257                                  
   258 000001AF E90000                      jmp draw_position_end
   259                                  
   260                                  draw_position_end:
   261 000001B2 5F                          pop		di
   262 000001B3 5E                          pop		si
   263 000001B4 5A                          pop		dx
   264 000001B5 59                          pop		cx
   265 000001B6 5B                          pop		bx
   266 000001B7 58                          pop		ax
   267 000001B8 9D                          popf
   268 000001B9 5D                          pop		bp
   269 000001BA C20600                      ret 6
   270                                  
   271                                  segment data
   272                                  ;coordenadas do inicio (canto inferior esquerdo) e do fim (canto superior direito) da tabela do jogo da velha
   273                                      offset_tabela_x     equ     20
   274                                      offset_tabela_y     equ     30
   275                                      fim_tabela_x        equ     620
   276                                      fim_tabela_y        equ     450
   277                                  
   278                                  ; dimensoes de cada quadradinho do jogo da velha
   279                                      largura_x           equ     200
   280                                      altura_y            equ     140
   281                                  
   282                                  ; vez do jogador anterior
   283 00000000 2000                        jogador_anterior    dw      ' '
   284 00000002 2000                        proximo_jogador     dw      ' '
   285                                  
   286                                  ; mensagens de status
   287 00000004 566F6365206A61206A-         jogada_dupla        db      'Voce ja jogou, vez do jogador '
   288 0000000D 6F676F752C2076657A-
   289 00000016 20646F206A6F676164-
   290 0000001F 6F7220             
   291 00000022 4A6F6761646F722069-         jogador_invalido    db      'Jogador invalido!'
   292 0000002B 6E76616C69646F21   
   293                                  segment stack stack
   294 00000000 <res 00000080>              resb 128
   295                                  stacktop:
