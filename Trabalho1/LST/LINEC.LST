     1                                  ; vers�o de 10/05/2007
     2                                  ; corrigido erro de arredondamento na rotina line.
     3                                  ; circle e full_circle disponibilizados por Jefferson Moro em 10/2009
     4                                  ;
     5                                  
     6                                  global circle, line, cursor, caracter
     7                                  global cor, modo_anterior
     8                                  global azul, vermelho, branco_intenso, amarelo
     9                                  segment code
    10                                  ..start:
    11 00000000 B8[0000]                    		mov 		ax,data
    12 00000003 8ED8                        		mov 		ds,ax
    13 00000005 B8[0000]                    		mov 		ax,stack
    14 00000008 8ED0                        		mov 		ss,ax
    15 0000000A BC[0002]                    		mov 		sp,stacktop
    16                                  
    17                                  ; salvar modo corrente de video(vendo como est� o modo de video da maquina)
    18 0000000D B40F                                mov  		ah,0Fh
    19 0000000F CD10                        		int  		10h
    20 00000011 A2[0200]                    		mov  		[modo_anterior],al   
    21                                  
    22                                  ; alterar modo de video para gr�fico 640x480 16 cores
    23 00000014 B012                        	mov     	al,12h
    24 00000016 B400                       		mov     	ah,0
    25 00000018 CD10                        	int     	10h
    26                                  		
    27                                  
    28                                  ;desenhar retas
    29                                  
    30 0000001A C706[0000]0F00          		mov		word[cor],branco_intenso	;antenas
    31 00000020 B81400                  		mov		ax,20
    32 00000023 50                      		push		ax
    33 00000024 B89001                  		mov		ax,400
    34 00000027 50                      		push		ax
    35 00000028 B86C02                  		mov		ax,620
    36 0000002B 50                      		push		ax
    37 0000002C B89001                  		mov		ax,400
    38 0000002F 50                      		push		ax
    39 00000030 E8D102                  		call		line
    40                                  		
    41 00000033 C706[0000]0600          		mov		word[cor],marrom	;antenas
    42 00000039 B88200                  		mov		ax,130
    43 0000003C 50                      		push		ax
    44 0000003D B80E01                  		mov		ax,270
    45 00000040 50                      		push		ax
    46 00000041 B86400                  		mov		ax,100
    47 00000044 50                      		push		ax
    48 00000045 B82C01                  		mov		ax,300
    49 00000048 50                      		push		ax
    50 00000049 E8B802                  		call		line
    51                                  		
    52 0000004C B88200                  		mov		ax,130
    53 0000004F 50                      		push		ax
    54 00000050 B88200                  		mov		ax,130
    55 00000053 50                      		push		ax
    56 00000054 B86400                  		mov		ax,100
    57 00000057 50                      		push		ax
    58 00000058 B86400                  		mov		ax,100
    59 0000005B 50                      		push		ax
    60 0000005C E8A502                  		call		line
    61                                  		
    62                                  		
    63                                  ;desenha circulos 
    64 0000005F C706[0000]0100          		mov		word[cor],azul	;cabe�a
    65 00000065 B8C800                  		mov		ax,200
    66 00000068 50                      		push		ax
    67 00000069 B8C800                  		mov		ax,200
    68 0000006C 50                      		push		ax
    69 0000006D B86400                  		mov		ax,100
    70 00000070 50                      		push		ax
    71 00000071 E8F500                  		call	circle
    72                                  
    73 00000074 C706[0000]0200          		mov		word[cor],verde	;corpo
    74 0000007A B8C201                  		mov		ax,450
    75 0000007D 50                      		push		ax
    76 0000007E B8C800                  		mov		ax,200
    77 00000081 50                      		push		ax
    78 00000082 B8BE00                  		mov		ax,190
    79 00000085 50                      		push		ax
    80 00000086 E8E000                  		call	circle
    81                                  		
    82 00000089 B86400                  		mov		ax,100	;circulos das antenas
    83 0000008C 50                      		push		ax
    84 0000008D B86400                  		mov		ax,100
    85 00000090 50                      		push		ax
    86 00000091 B80A00                  		mov		ax,10
    87 00000094 50                      		push		ax
    88 00000095 E8D100                  		call	circle
    89                                  		
    90 00000098 B86400                  		mov		ax,100
    91 0000009B 50                      		push		ax
    92 0000009C B82C01                  		mov		ax,300
    93 0000009F 50                      		push		ax
    94 000000A0 B80A00                  		mov		ax,10
    95 000000A3 50                      		push		ax
    96 000000A4 E8C200                  		call	circle
    97                                  		
    98 000000A7 C706[0000]0400          		mov		word[cor],vermelho	;circulos vermelhos
    99 000000AD B8F401                  		mov		ax,500
   100 000000B0 50                      		push		ax
   101 000000B1 B82C01                  		mov		ax,300
   102 000000B4 50                      		push		ax
   103 000000B5 B83200                  		mov		ax,50
   104 000000B8 50                      		push		ax
   105 000000B9 E88B01                  		call	full_circle
   106                                  		
   107 000000BC B8F401                  		mov		ax,500
   108 000000BF 50                      		push		ax
   109 000000C0 B86400                  		mov		ax,100
   110 000000C3 50                      		push		ax
   111 000000C4 B83200                  		mov		ax,50
   112 000000C7 50                      		push		ax
   113 000000C8 E87C01                  		call	full_circle
   114                                  		
   115 000000CB B85E01                  		mov		ax,350
   116 000000CE 50                      		push		ax
   117 000000CF B8C800                  		mov		ax,200
   118 000000D2 50                      		push		ax
   119 000000D3 B83200                  		mov		ax,50
   120 000000D6 50                      		push		ax
   121 000000D7 E86D01                  		call	full_circle
   122                                  		
   123                                  
   124                                  ;escrever uma mensagem
   125                                  
   126 000000DA B90E00                      	mov     	cx,14			;n�mero de caracteres
   127 000000DD BB0000                      	mov     	bx,0
   128 000000E0 B600                        	mov     	dh,0			;linha 0-29
   129 000000E2 B21E                        	mov     	dl,30			;coluna 0-79
   130 000000E4 C706[0000]0100          		mov			word[cor],azul
   131                                  l4:
   132 000000EA E82000                  		call	cursor
   133 000000ED 8A87[0B00]                  	mov     al,[bx+mens]
   134 000000F1 E83000                  		call	caracter
   135 000000F4 43                          	inc     bx			;proximo caracter
   136 000000F5 FEC2                    		inc		dl			;avanca a coluna
   137 000000F7 FF06[0000]              		inc		word [cor]		;mudar a cor para a seguinte
   138 000000FB E2ED                        	loop    l4
   139                                  
   140 000000FD B408                    		mov    	ah,08h
   141 000000FF CD21                    		int     21h
   142 00000101 B400                    	    mov  	ah,0   			; set video mode
   143 00000103 A0[0200]                	    mov  	al,[modo_anterior]   	; modo anterior
   144 00000106 CD10                    	    int  	10h
   145 00000108 B8004C                  		mov     ax,4c00h
   146 0000010B CD21                    		int     21h
   147                                  ;***************************************************************************
   148                                  ;
   149                                  ;   fun��o cursor
   150                                  ;
   151                                  ; dh = linha (0-29) e  dl=coluna  (0-79)
   152                                  cursor:
   153 0000010D 9C                      		pushf
   154 0000010E 50                      		push 		ax
   155 0000010F 53                      		push 		bx
   156 00000110 51                      		push		cx
   157 00000111 52                      		push		dx
   158 00000112 56                      		push		si
   159 00000113 57                      		push		di
   160 00000114 55                      		push		bp
   161 00000115 B402                    		mov     	ah,2
   162 00000117 B700                    		mov     	bh,0
   163 00000119 CD10                    		int     	10h
   164 0000011B 5D                      		pop		bp
   165 0000011C 5F                      		pop		di
   166 0000011D 5E                      		pop		si
   167 0000011E 5A                      		pop		dx
   168 0000011F 59                      		pop		cx
   169 00000120 5B                      		pop		bx
   170 00000121 58                      		pop		ax
   171 00000122 9D                      		popf
   172 00000123 C3                      		ret
   173                                  ;_____________________________________________________________________________
   174                                  ;
   175                                  ;   fun��o caracter escrito na posi��o do cursor
   176                                  ;
   177                                  ; al= caracter a ser escrito
   178                                  ; cor definida na variavel cor
   179                                  caracter:
   180 00000124 9C                      		pushf
   181 00000125 50                      		push 		ax
   182 00000126 53                      		push 		bx
   183 00000127 51                      		push		cx
   184 00000128 52                      		push		dx
   185 00000129 56                      		push		si
   186 0000012A 57                      		push		di
   187 0000012B 55                      		push		bp
   188 0000012C B409                        		mov     	ah,9
   189 0000012E B700                        		mov     	bh,0
   190 00000130 B90100                      		mov     	cx,1
   191 00000133 8A1E[0000]                 		mov     	bl,[cor]
   192 00000137 CD10                        		int     	10h
   193 00000139 5D                      		pop		bp
   194 0000013A 5F                      		pop		di
   195 0000013B 5E                      		pop		si
   196 0000013C 5A                      		pop		dx
   197 0000013D 59                      		pop		cx
   198 0000013E 5B                      		pop		bx
   199 0000013F 58                      		pop		ax
   200 00000140 9D                      		popf
   201 00000141 C3                      		ret
   202                                  ;_____________________________________________________________________________
   203                                  ;
   204                                  ;   fun��o plot_xy
   205                                  ;
   206                                  ; push x; push y; call plot_xy;  (x<639, y<479)
   207                                  ; cor definida na variavel cor
   208                                  plot_xy:
   209 00000142 55                      		push		bp
   210 00000143 89E5                    		mov		bp,sp
   211 00000145 9C                      		pushf
   212 00000146 50                      		push 		ax
   213 00000147 53                      		push 		bx
   214 00000148 51                      		push		cx
   215 00000149 52                      		push		dx
   216 0000014A 56                      		push		si
   217 0000014B 57                      		push		di
   218 0000014C B40C                    	    mov     	ah,0ch
   219 0000014E A0[0000]                	    mov     	al,[cor]
   220 00000151 B700                    	    mov     	bh,0
   221 00000153 BADF01                  	    mov     	dx,479
   222 00000156 2B5604                  		sub		dx,[bp+4]
   223 00000159 8B4E06                  	    mov     	cx,[bp+6]
   224 0000015C CD10                    	    int     	10h
   225 0000015E 5F                      		pop		di
   226 0000015F 5E                      		pop		si
   227 00000160 5A                      		pop		dx
   228 00000161 59                      		pop		cx
   229 00000162 5B                      		pop		bx
   230 00000163 58                      		pop		ax
   231 00000164 9D                      		popf
   232 00000165 5D                      		pop		bp
   233 00000166 C20400                  		ret		4
   234                                  ;_____________________________________________________________________________
   235                                  ;    fun��o circle
   236                                  ;	 push xc; push yc; push r; call circle;  (xc+r<639,yc+r<479)e(xc-r>0,yc-r>0)
   237                                  ; cor definida na variavel cor
   238                                  circle:
   239 00000169 55                      	push 	bp
   240 0000016A 89E5                    	mov	 	bp,sp
   241 0000016C 9C                      	pushf                        ;coloca os flags na pilha
   242 0000016D 50                      	push 	ax
   243 0000016E 53                      	push 	bx
   244 0000016F 51                      	push	cx
   245 00000170 52                      	push	dx
   246 00000171 56                      	push	si
   247 00000172 57                      	push	di
   248                                  	
   249 00000173 8B4608                  	mov		ax,[bp+8]    ; resgata xc
   250 00000176 8B5E06                  	mov		bx,[bp+6]    ; resgata yc
   251 00000179 8B4E04                  	mov		cx,[bp+4]    ; resgata r
   252                                  	
   253 0000017C 89DA                    	mov 	dx,bx	
   254 0000017E 01CA                    	add		dx,cx       ;ponto extremo superior
   255 00000180 50                      	push    ax			
   256 00000181 52                      	push	dx
   257 00000182 E8BDFF                  	call plot_xy
   258                                  	
   259 00000185 89DA                    	mov		dx,bx
   260 00000187 29CA                    	sub		dx,cx       ;ponto extremo inferior
   261 00000189 50                      	push    ax			
   262 0000018A 52                      	push	dx
   263 0000018B E8B4FF                  	call plot_xy
   264                                  	
   265 0000018E 89C2                    	mov 	dx,ax	
   266 00000190 01CA                    	add		dx,cx       ;ponto extremo direita
   267 00000192 52                      	push    dx			
   268 00000193 53                      	push	bx
   269 00000194 E8ABFF                  	call plot_xy
   270                                  	
   271 00000197 89C2                    	mov		dx,ax
   272 00000199 29CA                    	sub		dx,cx       ;ponto extremo esquerda
   273 0000019B 52                      	push    dx			
   274 0000019C 53                      	push	bx
   275 0000019D E8A2FF                  	call plot_xy
   276                                  		
   277 000001A0 89CF                    	mov		di,cx
   278 000001A2 81EF0100                	sub		di,1	 ;di=r-1
   279 000001A6 BA0000                  	mov		dx,0  	;dx ser� a vari�vel x. cx � a variavel y
   280                                  	
   281                                  ;aqui em cima a l�gica foi invertida, 1-r => r-1
   282                                  ;e as compara��es passaram a ser jl => jg, assim garante 
   283                                  ;valores positivos para d
   284                                  
   285                                  stay:				;loop
   286 000001A9 89FE                    	mov		si,di
   287 000001AB 81FE0000                	cmp		si,0
   288 000001AF 7F0E                    	jg		inf       ;caso d for menor que 0, seleciona pixel superior (n�o  salta)
   289 000001B1 89D6                    	mov		si,dx		;o jl � importante porque trata-se de conta com sinal
   290 000001B3 D1E6                    	sal		si,1		;multiplica por doi (shift arithmetic left)
   291 000001B5 81C60300                	add		si,3
   292 000001B9 01F7                    	add		di,si     ;nesse ponto d=d+2*dx+3
   293 000001BB 42                      	inc		dx		;incrementa dx
   294 000001BC E90E00                  	jmp		plotar
   295                                  inf:	
   296 000001BF 89D6                    	mov		si,dx
   297 000001C1 29CE                    	sub		si,cx  		;faz x - y (dx-cx), e salva em di 
   298 000001C3 D1E6                    	sal		si,1
   299 000001C5 81C60500                	add		si,5
   300 000001C9 01F7                    	add		di,si		;nesse ponto d=d+2*(dx-cx)+5
   301 000001CB 42                      	inc		dx		;incrementa x (dx)
   302 000001CC 49                      	dec		cx		;decrementa y (cx)
   303                                  	
   304                                  plotar:	
   305 000001CD 89D6                    	mov		si,dx
   306 000001CF 01C6                    	add		si,ax
   307 000001D1 56                      	push    si			;coloca a abcisa x+xc na pilha
   308 000001D2 89CE                    	mov		si,cx
   309 000001D4 01DE                    	add		si,bx
   310 000001D6 56                      	push    si			;coloca a ordenada y+yc na pilha
   311 000001D7 E868FF                  	call plot_xy		;toma conta do segundo octante
   312 000001DA 89C6                    	mov		si,ax
   313 000001DC 01D6                    	add		si,dx
   314 000001DE 56                      	push    si			;coloca a abcisa xc+x na pilha
   315 000001DF 89DE                    	mov		si,bx
   316 000001E1 29CE                    	sub		si,cx
   317 000001E3 56                      	push    si			;coloca a ordenada yc-y na pilha
   318 000001E4 E85BFF                  	call plot_xy		;toma conta do s�timo octante
   319 000001E7 89C6                    	mov		si,ax
   320 000001E9 01CE                    	add		si,cx
   321 000001EB 56                      	push    si			;coloca a abcisa xc+y na pilha
   322 000001EC 89DE                    	mov		si,bx
   323 000001EE 01D6                    	add		si,dx
   324 000001F0 56                      	push    si			;coloca a ordenada yc+x na pilha
   325 000001F1 E84EFF                  	call plot_xy		;toma conta do segundo octante
   326 000001F4 89C6                    	mov		si,ax
   327 000001F6 01CE                    	add		si,cx
   328 000001F8 56                      	push    si			;coloca a abcisa xc+y na pilha
   329 000001F9 89DE                    	mov		si,bx
   330 000001FB 29D6                    	sub		si,dx
   331 000001FD 56                      	push    si			;coloca a ordenada yc-x na pilha
   332 000001FE E841FF                  	call plot_xy		;toma conta do oitavo octante
   333 00000201 89C6                    	mov		si,ax
   334 00000203 29D6                    	sub		si,dx
   335 00000205 56                      	push    si			;coloca a abcisa xc-x na pilha
   336 00000206 89DE                    	mov		si,bx
   337 00000208 01CE                    	add		si,cx
   338 0000020A 56                      	push    si			;coloca a ordenada yc+y na pilha
   339 0000020B E834FF                  	call plot_xy		;toma conta do terceiro octante
   340 0000020E 89C6                    	mov		si,ax
   341 00000210 29D6                    	sub		si,dx
   342 00000212 56                      	push    si			;coloca a abcisa xc-x na pilha
   343 00000213 89DE                    	mov		si,bx
   344 00000215 29CE                    	sub		si,cx
   345 00000217 56                      	push    si			;coloca a ordenada yc-y na pilha
   346 00000218 E827FF                  	call plot_xy		;toma conta do sexto octante
   347 0000021B 89C6                    	mov		si,ax
   348 0000021D 29CE                    	sub		si,cx
   349 0000021F 56                      	push    si			;coloca a abcisa xc-y na pilha
   350 00000220 89DE                    	mov		si,bx
   351 00000222 29D6                    	sub		si,dx
   352 00000224 56                      	push    si			;coloca a ordenada yc-x na pilha
   353 00000225 E81AFF                  	call plot_xy		;toma conta do quinto octante
   354 00000228 89C6                    	mov		si,ax
   355 0000022A 29CE                    	sub		si,cx
   356 0000022C 56                      	push    si			;coloca a abcisa xc-y na pilha
   357 0000022D 89DE                    	mov		si,bx
   358 0000022F 01D6                    	add		si,dx
   359 00000231 56                      	push    si			;coloca a ordenada yc-x na pilha
   360 00000232 E80DFF                  	call plot_xy		;toma conta do quarto octante
   361                                  	
   362 00000235 39D1                    	cmp		cx,dx
   363 00000237 7203                    	jb		fim_circle  ;se cx (y) est� abaixo de dx (x), termina     
   364 00000239 E96DFF                  	jmp		stay		;se cx (y) est� acima de dx (x), continua no loop
   365                                  	
   366                                  	
   367                                  fim_circle:
   368 0000023C 5F                      	pop		di
   369 0000023D 5E                      	pop		si
   370 0000023E 5A                      	pop		dx
   371 0000023F 59                      	pop		cx
   372 00000240 5B                      	pop		bx
   373 00000241 58                      	pop		ax
   374 00000242 9D                      	popf
   375 00000243 5D                      	pop		bp
   376 00000244 C20600                  	ret		6
   377                                  ;-----------------------------------------------------------------------------
   378                                  ;    fun��o full_circle
   379                                  ;	 push xc; push yc; push r; call full_circle;  (xc+r<639,yc+r<479)e(xc-r>0,yc-r>0)
   380                                  ; cor definida na variavel cor					  
   381                                  full_circle:
   382 00000247 55                      	push 	bp
   383 00000248 89E5                    	mov	 	bp,sp
   384 0000024A 9C                      	pushf                        ;coloca os flags na pilha
   385 0000024B 50                      	push 	ax
   386 0000024C 53                      	push 	bx
   387 0000024D 51                      	push	cx
   388 0000024E 52                      	push	dx
   389 0000024F 56                      	push	si
   390 00000250 57                      	push	di
   391                                  
   392 00000251 8B4608                  	mov		ax,[bp+8]    ; resgata xc
   393 00000254 8B5E06                  	mov		bx,[bp+6]    ; resgata yc
   394 00000257 8B4E04                  	mov		cx,[bp+4]    ; resgata r
   395                                  	
   396 0000025A 89DE                    	mov		si,bx
   397 0000025C 29CE                    	sub		si,cx
   398 0000025E 50                      	push    ax			;coloca xc na pilha			
   399 0000025F 56                      	push	si			;coloca yc-r na pilha
   400 00000260 89DE                    	mov		si,bx
   401 00000262 01CE                    	add		si,cx
   402 00000264 50                      	push	ax		;coloca xc na pilha
   403 00000265 56                      	push	si		;coloca yc+r na pilha
   404 00000266 E89B00                  	call line
   405                                  	
   406                                  		
   407 00000269 89CF                    	mov		di,cx
   408 0000026B 81EF0100                	sub		di,1	 ;di=r-1
   409 0000026F BA0000                  	mov		dx,0  	;dx ser� a vari�vel x. cx � a variavel y
   410                                  	
   411                                  ;aqui em cima a l�gica foi invertida, 1-r => r-1
   412                                  ;e as compara��es passaram a ser jl => jg, assim garante 
   413                                  ;valores positivos para d
   414                                  
   415                                  stay_full:				;loop
   416 00000272 89FE                    	mov		si,di
   417 00000274 81FE0000                	cmp		si,0
   418 00000278 7F0E                    	jg		inf_full       ;caso d for menor que 0, seleciona pixel superior (n�o  salta)
   419 0000027A 89D6                    	mov		si,dx		;o jl � importante porque trata-se de conta com sinal
   420 0000027C D1E6                    	sal		si,1		;multiplica por doi (shift arithmetic left)
   421 0000027E 81C60300                	add		si,3
   422 00000282 01F7                    	add		di,si     ;nesse ponto d=d+2*dx+3
   423 00000284 42                      	inc		dx		;incrementa dx
   424 00000285 E90E00                  	jmp		plotar_full
   425                                  inf_full:	
   426 00000288 89D6                    	mov		si,dx
   427 0000028A 29CE                    	sub		si,cx  		;faz x - y (dx-cx), e salva em di 
   428 0000028C D1E6                    	sal		si,1
   429 0000028E 81C60500                	add		si,5
   430 00000292 01F7                    	add		di,si		;nesse ponto d=d+2*(dx-cx)+5
   431 00000294 42                      	inc		dx		;incrementa x (dx)
   432 00000295 49                      	dec		cx		;decrementa y (cx)
   433                                  	
   434                                  plotar_full:	
   435 00000296 89C6                    	mov		si,ax
   436 00000298 01CE                    	add		si,cx
   437 0000029A 56                      	push	si		;coloca a abcisa y+xc na pilha			
   438 0000029B 89DE                    	mov		si,bx
   439 0000029D 29D6                    	sub		si,dx
   440 0000029F 56                      	push    si		;coloca a ordenada yc-x na pilha
   441 000002A0 89C6                    	mov		si,ax
   442 000002A2 01CE                    	add		si,cx
   443 000002A4 56                      	push	si		;coloca a abcisa y+xc na pilha	
   444 000002A5 89DE                    	mov		si,bx
   445 000002A7 01D6                    	add		si,dx
   446 000002A9 56                      	push    si		;coloca a ordenada yc+x na pilha	
   447 000002AA E85700                  	call 	line
   448                                  	
   449 000002AD 89C6                    	mov		si,ax
   450 000002AF 01D6                    	add		si,dx
   451 000002B1 56                      	push	si		;coloca a abcisa xc+x na pilha			
   452 000002B2 89DE                    	mov		si,bx
   453 000002B4 29CE                    	sub		si,cx
   454 000002B6 56                      	push    si		;coloca a ordenada yc-y na pilha
   455 000002B7 89C6                    	mov		si,ax
   456 000002B9 01D6                    	add		si,dx
   457 000002BB 56                      	push	si		;coloca a abcisa xc+x na pilha	
   458 000002BC 89DE                    	mov		si,bx
   459 000002BE 01CE                    	add		si,cx
   460 000002C0 56                      	push    si		;coloca a ordenada yc+y na pilha	
   461 000002C1 E84000                  	call	line
   462                                  	
   463 000002C4 89C6                    	mov		si,ax
   464 000002C6 29D6                    	sub		si,dx
   465 000002C8 56                      	push	si		;coloca a abcisa xc-x na pilha			
   466 000002C9 89DE                    	mov		si,bx
   467 000002CB 29CE                    	sub		si,cx
   468 000002CD 56                      	push    si		;coloca a ordenada yc-y na pilha
   469 000002CE 89C6                    	mov		si,ax
   470 000002D0 29D6                    	sub		si,dx
   471 000002D2 56                      	push	si		;coloca a abcisa xc-x na pilha	
   472 000002D3 89DE                    	mov		si,bx
   473 000002D5 01CE                    	add		si,cx
   474 000002D7 56                      	push    si		;coloca a ordenada yc+y na pilha	
   475 000002D8 E82900                  	call	line
   476                                  	
   477 000002DB 89C6                    	mov		si,ax
   478 000002DD 29CE                    	sub		si,cx
   479 000002DF 56                      	push	si		;coloca a abcisa xc-y na pilha			
   480 000002E0 89DE                    	mov		si,bx
   481 000002E2 29D6                    	sub		si,dx
   482 000002E4 56                      	push    si		;coloca a ordenada yc-x na pilha
   483 000002E5 89C6                    	mov		si,ax
   484 000002E7 29CE                    	sub		si,cx
   485 000002E9 56                      	push	si		;coloca a abcisa xc-y na pilha	
   486 000002EA 89DE                    	mov		si,bx
   487 000002EC 01D6                    	add		si,dx
   488 000002EE 56                      	push    si		;coloca a ordenada yc+x na pilha	
   489 000002EF E81200                  	call	line
   490                                  	
   491 000002F2 39D1                    	cmp		cx,dx
   492 000002F4 7203                    	jb		fim_full_circle  ;se cx (y) est� abaixo de dx (x), termina     
   493 000002F6 E979FF                  	jmp		stay_full		;se cx (y) est� acima de dx (x), continua no loop
   494                                  	
   495                                  	
   496                                  fim_full_circle:
   497 000002F9 5F                      	pop		di
   498 000002FA 5E                      	pop		si
   499 000002FB 5A                      	pop		dx
   500 000002FC 59                      	pop		cx
   501 000002FD 5B                      	pop		bx
   502 000002FE 58                      	pop		ax
   503 000002FF 9D                      	popf
   504 00000300 5D                      	pop		bp
   505 00000301 C20600                  	ret		6
   506                                  ;-----------------------------------------------------------------------------
   507                                  ;
   508                                  ;   fun��o line
   509                                  ;
   510                                  ; push x1; push y1; push x2; push y2; call line;  (x<639, y<479)
   511                                  line:
   512 00000304 55                      		push		bp
   513 00000305 89E5                    		mov		bp,sp
   514 00000307 9C                      		pushf                        ;coloca os flags na pilha
   515 00000308 50                      		push 		ax
   516 00000309 53                      		push 		bx
   517 0000030A 51                      		push		cx
   518 0000030B 52                      		push		dx
   519 0000030C 56                      		push		si
   520 0000030D 57                      		push		di
   521 0000030E 8B460A                  		mov		ax,[bp+10]   ; resgata os valores das coordenadas
   522 00000311 8B5E08                  		mov		bx,[bp+8]    ; resgata os valores das coordenadas
   523 00000314 8B4E06                  		mov		cx,[bp+6]    ; resgata os valores das coordenadas
   524 00000317 8B5604                  		mov		dx,[bp+4]    ; resgata os valores das coordenadas
   525 0000031A 39C8                    		cmp		ax,cx
   526 0000031C 7408                    		je		line2
   527 0000031E 721C                    		jb		line1
   528 00000320 91                      		xchg		ax,cx
   529 00000321 87DA                    		xchg		bx,dx
   530 00000323 E91600                  		jmp		line1
   531                                  line2:		; deltax=0
   532 00000326 39D3                    		cmp		bx,dx  ;subtrai dx de bx
   533 00000328 7202                    		jb		line3
   534 0000032A 87DA                    		xchg		bx,dx        ;troca os valores de bx e dx entre eles
   535                                  line3:	; dx > bx
   536 0000032C 50                      		push		ax
   537 0000032D 53                      		push		bx
   538 0000032E E811FE                  		call 		plot_xy
   539 00000331 39D3                    		cmp		bx,dx
   540 00000333 7503                    		jne		line31
   541 00000335 E9C600                  		jmp		fim_line
   542 00000338 43                      line31:		inc		bx
   543 00000339 E9F0FF                  		jmp		line3
   544                                  ;deltax <>0
   545                                  line1:
   546                                  ; comparar m�dulos de deltax e deltay sabendo que cx>ax
   547                                  	; cx > ax
   548 0000033C 51                      		push		cx
   549 0000033D 29C1                    		sub		cx,ax
   550 0000033F 890E[0700]              		mov		[deltax],cx
   551 00000343 59                      		pop		cx
   552 00000344 52                      		push		dx
   553 00000345 29DA                    		sub		dx,bx
   554 00000347 7702                    		ja		line32
   555 00000349 F7DA                    		neg		dx
   556                                  line32:		
   557 0000034B 8916[0900]              		mov		[deltay],dx
   558 0000034F 5A                      		pop		dx
   559                                  
   560 00000350 50                      		push		ax
   561 00000351 A1[0700]                		mov		ax,[deltax]
   562 00000354 3B06[0900]              		cmp		ax,[deltay]
   563 00000358 58                      		pop		ax
   564 00000359 724D                    		jb		line5
   565                                  
   566                                  	; cx > ax e deltax>deltay
   567 0000035B 51                      		push		cx
   568 0000035C 29C1                    		sub		cx,ax
   569 0000035E 890E[0700]              		mov		[deltax],cx
   570 00000362 59                      		pop		cx
   571 00000363 52                      		push		dx
   572 00000364 29DA                    		sub		dx,bx
   573 00000366 8916[0900]              		mov		[deltay],dx
   574 0000036A 5A                      		pop		dx
   575                                  
   576 0000036B 89C6                    		mov		si,ax
   577                                  line4:
   578 0000036D 50                      		push		ax
   579 0000036E 52                      		push		dx
   580 0000036F 56                      		push		si
   581 00000370 29C6                    		sub		si,ax	;(x-x1)
   582 00000372 A1[0900]                		mov		ax,[deltay]
   583 00000375 F7EE                    		imul		si
   584 00000377 8B36[0700]              		mov		si,[deltax]		;arredondar
   585 0000037B D1EE                    		shr		si,1
   586                                  ; se numerador (DX)>0 soma se <0 subtrai
   587 0000037D 81FA0000                		cmp		dx,0
   588 00000381 7C09                    		jl		ar1
   589 00000383 01F0                    		add		ax,si
   590 00000385 81D20000                		adc		dx,0
   591 00000389 E90600                  		jmp		arc1
   592 0000038C 29F0                    ar1:		sub		ax,si
   593 0000038E 81DA0000                		sbb		dx,0
   594                                  arc1:
   595 00000392 F73E[0700]              		idiv		word [deltax]
   596 00000396 01D8                    		add		ax,bx
   597 00000398 5E                      		pop		si
   598 00000399 56                      		push		si
   599 0000039A 50                      		push		ax
   600 0000039B E8A4FD                  		call		plot_xy
   601 0000039E 5A                      		pop		dx
   602 0000039F 58                      		pop		ax
   603 000003A0 39CE                    		cmp		si,cx
   604 000003A2 745A                    		je		fim_line
   605 000003A4 46                      		inc		si
   606 000003A5 E9C5FF                  		jmp		line4
   607                                  
   608 000003A8 39D3                    line5:		cmp		bx,dx
   609 000003AA 7203                    		jb 		line7
   610 000003AC 91                      		xchg		ax,cx
   611 000003AD 87DA                    		xchg		bx,dx
   612                                  line7:
   613 000003AF 51                      		push		cx
   614 000003B0 29C1                    		sub		cx,ax
   615 000003B2 890E[0700]              		mov		[deltax],cx
   616 000003B6 59                      		pop		cx
   617 000003B7 52                      		push		dx
   618 000003B8 29DA                    		sub		dx,bx
   619 000003BA 8916[0900]              		mov		[deltay],dx
   620 000003BE 5A                      		pop		dx
   621                                  
   622                                  
   623                                  
   624 000003BF 89DE                    		mov		si,bx
   625                                  line6:
   626 000003C1 52                      		push		dx
   627 000003C2 56                      		push		si
   628 000003C3 50                      		push		ax
   629 000003C4 29DE                    		sub		si,bx	;(y-y1)
   630 000003C6 A1[0700]                		mov		ax,[deltax]
   631 000003C9 F7EE                    		imul		si
   632 000003CB 8B36[0900]              		mov		si,[deltay]		;arredondar
   633 000003CF D1EE                    		shr		si,1
   634                                  ; se numerador (DX)>0 soma se <0 subtrai
   635 000003D1 81FA0000                		cmp		dx,0
   636 000003D5 7C09                    		jl		ar2
   637 000003D7 01F0                    		add		ax,si
   638 000003D9 81D20000                		adc		dx,0
   639 000003DD E90600                  		jmp		arc2
   640 000003E0 29F0                    ar2:		sub		ax,si
   641 000003E2 81DA0000                		sbb		dx,0
   642                                  arc2:
   643 000003E6 F73E[0900]              		idiv		word [deltay]
   644 000003EA 89C7                    		mov		di,ax
   645 000003EC 58                      		pop		ax
   646 000003ED 01C7                    		add		di,ax
   647 000003EF 5E                      		pop		si
   648 000003F0 57                      		push		di
   649 000003F1 56                      		push		si
   650 000003F2 E84DFD                  		call		plot_xy
   651 000003F5 5A                      		pop		dx
   652 000003F6 39D6                    		cmp		si,dx
   653 000003F8 7404                    		je		fim_line
   654 000003FA 46                      		inc		si
   655 000003FB E9C3FF                  		jmp		line6
   656                                  
   657                                  fim_line:
   658 000003FE 5F                      		pop		di
   659 000003FF 5E                      		pop		si
   660 00000400 5A                      		pop		dx
   661 00000401 59                      		pop		cx
   662 00000402 5B                      		pop		bx
   663 00000403 58                      		pop		ax
   664 00000404 9D                      		popf
   665 00000405 5D                      		pop		bp
   666 00000406 C20800                  		ret		8
   667                                  ;*******************************************************************
   668                                  segment data
   669                                  
   670 00000000 0F00                    	cor		dw		branco_intenso
   671                                  
   672                                  ;	I R G B COR
   673                                  ;	0 0 0 0 preto
   674                                  ;	0 0 0 1 azul
   675                                  ;	0 0 1 0 verde
   676                                  ;	0 0 1 1 cyan
   677                                  ;	0 1 0 0 vermelho
   678                                  ;	0 1 0 1 magenta
   679                                  ;	0 1 1 0 marrom
   680                                  ;	0 1 1 1 branco
   681                                  ;	1 0 0 0 cinza
   682                                  ;	1 0 0 1 azul claro
   683                                  ;	1 0 1 0 verde claro
   684                                  ;	1 0 1 1 cyan claro
   685                                  ;	1 1 0 0 rosa
   686                                  ;	1 1 0 1 magenta claro
   687                                  ;	1 1 1 0 amarelo
   688                                  ;	1 1 1 1 branco intenso
   689                                  
   690                                  	preto		equ		0
   691                                  	azul		equ		1
   692                                  	verde		equ		2
   693                                  	cyan		equ		3
   694                                  	vermelho	equ		4
   695                                  	magenta		equ		5
   696                                  	marrom		equ		6
   697                                  	branco		equ		7
   698                                  	cinza		equ		8
   699                                  	azul_claro	equ		9
   700                                  	verde_claro	equ		10
   701                                  	cyan_claro	equ		11
   702                                  	rosa		equ		12
   703                                  	magenta_claro	equ		13
   704                                  	amarelo		equ		14
   705                                  	branco_intenso	equ		15
   706                                  
   707 00000002 00                      	modo_anterior	db		0
   708 00000003 0000                    	linha   	dw  		0
   709 00000005 0000                    	coluna  	dw  		0
   710 00000007 0000                    	deltax		dw		0
   711 00000009 0000                    	deltay		dw		0	
   712 0000000B 46756E63616F204772-     	mens    	db  		'Funcao Grafica'
   713 00000014 6166696361         
   714                                  ;*************************************************************************
   715                                  segment stack stack
   716 00000000 <res 00000200>          	resb 		512
   717                                  stacktop:
