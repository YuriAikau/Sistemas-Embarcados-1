     1                                  ; vers�o de 10/05/2007
     2                                  ; corrigido erro de arredondamento na rotina line.
     3                                  ; circle e full_circle disponibilizados por Jefferson Moro em 10/2009
     4                                  ;
     5                                  
     6                                  global circle, line, cursor, caracter
     7                                  global cor, modo_anterior
     8                                  global branco_intenso, amarelo, cyan_claro, magenta_claro
     9                                  segment code
    10                                  ..start:
    11                                  ;***************************************************************************
    12                                  ;
    13                                  ;   fun��o cursor
    14                                  ;
    15                                  ; dh = linha (0-29) e  dl=coluna  (0-79)
    16                                  cursor:
    17 00000000 9C                      		pushf
    18 00000001 50                      		push 		ax
    19 00000002 53                      		push 		bx
    20 00000003 51                      		push		cx
    21 00000004 52                      		push		dx
    22 00000005 56                      		push		si
    23 00000006 57                      		push		di
    24 00000007 55                      		push		bp
    25 00000008 B402                    		mov     	ah,2
    26 0000000A B700                    		mov     	bh,0
    27 0000000C CD10                    		int     	10h
    28 0000000E 5D                      		pop		bp
    29 0000000F 5F                      		pop		di
    30 00000010 5E                      		pop		si
    31 00000011 5A                      		pop		dx
    32 00000012 59                      		pop		cx
    33 00000013 5B                      		pop		bx
    34 00000014 58                      		pop		ax
    35 00000015 9D                      		popf
    36 00000016 C3                      		ret
    37                                  ;_____________________________________________________________________________
    38                                  ;
    39                                  ;   fun��o caracter escrito na posi��o do cursor
    40                                  ;
    41                                  ; al= caracter a ser escrito
    42                                  ; cor definida na variavel cor
    43                                  caracter:
    44 00000017 9C                      		pushf
    45 00000018 50                      		push 		ax
    46 00000019 53                      		push 		bx
    47 0000001A 51                      		push		cx
    48 0000001B 52                      		push		dx
    49 0000001C 56                      		push		si
    50 0000001D 57                      		push		di
    51 0000001E 55                      		push		bp
    52 0000001F B409                        		mov     	ah,9
    53 00000021 B700                        		mov     	bh,0
    54 00000023 B90100                      		mov     	cx,1
    55 00000026 8A1E[0000]                 		mov     	bl,[cor]
    56 0000002A CD10                        		int     	10h
    57 0000002C 5D                      		pop		bp
    58 0000002D 5F                      		pop		di
    59 0000002E 5E                      		pop		si
    60 0000002F 5A                      		pop		dx
    61 00000030 59                      		pop		cx
    62 00000031 5B                      		pop		bx
    63 00000032 58                      		pop		ax
    64 00000033 9D                      		popf
    65 00000034 C3                      		ret
    66                                  ;_____________________________________________________________________________
    67                                  ;
    68                                  ;   fun��o plot_xy
    69                                  ;
    70                                  ; push x; push y; call plot_xy;  (x<639, y<479)
    71                                  ; cor definida na variavel cor
    72                                  plot_xy:
    73 00000035 55                      		push		bp
    74 00000036 89E5                    		mov		bp,sp
    75 00000038 9C                      		pushf
    76 00000039 50                      		push 		ax
    77 0000003A 53                      		push 		bx
    78 0000003B 51                      		push		cx
    79 0000003C 52                      		push		dx
    80 0000003D 56                      		push		si
    81 0000003E 57                      		push		di
    82 0000003F B40C                    	    mov     	ah,0ch
    83 00000041 A0[0000]                	    mov     	al,[cor]
    84 00000044 B700                    	    mov     	bh,0
    85 00000046 BADF01                  	    mov     	dx,479
    86 00000049 2B5604                  		sub		dx,[bp+4]
    87 0000004C 8B4E06                  	    mov     	cx,[bp+6]
    88 0000004F CD10                    	    int     	10h
    89 00000051 5F                      		pop		di
    90 00000052 5E                      		pop		si
    91 00000053 5A                      		pop		dx
    92 00000054 59                      		pop		cx
    93 00000055 5B                      		pop		bx
    94 00000056 58                      		pop		ax
    95 00000057 9D                      		popf
    96 00000058 5D                      		pop		bp
    97 00000059 C20400                  		ret		4
    98                                  ;_____________________________________________________________________________
    99                                  ;    fun��o circle
   100                                  ;	 push xc; push yc; push r; call circle;  (xc+r<639,yc+r<479)e(xc-r>0,yc-r>0)
   101                                  ; cor definida na variavel cor
   102                                  circle:
   103 0000005C 55                      	push 	bp
   104 0000005D 89E5                    	mov	 	bp,sp
   105 0000005F 9C                      	pushf                        ;coloca os flags na pilha
   106 00000060 50                      	push 	ax
   107 00000061 53                      	push 	bx
   108 00000062 51                      	push	cx
   109 00000063 52                      	push	dx
   110 00000064 56                      	push	si
   111 00000065 57                      	push	di
   112                                  	
   113 00000066 8B4608                  	mov		ax,[bp+8]    ; resgata xc
   114 00000069 8B5E06                  	mov		bx,[bp+6]    ; resgata yc
   115 0000006C 8B4E04                  	mov		cx,[bp+4]    ; resgata r
   116                                  	
   117 0000006F 89DA                    	mov 	dx,bx	
   118 00000071 01CA                    	add		dx,cx       ;ponto extremo superior
   119 00000073 50                      	push    ax			
   120 00000074 52                      	push	dx
   121 00000075 E8BDFF                  	call plot_xy
   122                                  	
   123 00000078 89DA                    	mov		dx,bx
   124 0000007A 29CA                    	sub		dx,cx       ;ponto extremo inferior
   125 0000007C 50                      	push    ax			
   126 0000007D 52                      	push	dx
   127 0000007E E8B4FF                  	call plot_xy
   128                                  	
   129 00000081 89C2                    	mov 	dx,ax	
   130 00000083 01CA                    	add		dx,cx       ;ponto extremo direita
   131 00000085 52                      	push    dx			
   132 00000086 53                      	push	bx
   133 00000087 E8ABFF                  	call plot_xy
   134                                  	
   135 0000008A 89C2                    	mov		dx,ax
   136 0000008C 29CA                    	sub		dx,cx       ;ponto extremo esquerda
   137 0000008E 52                      	push    dx			
   138 0000008F 53                      	push	bx
   139 00000090 E8A2FF                  	call plot_xy
   140                                  		
   141 00000093 89CF                    	mov		di,cx
   142 00000095 81EF0100                	sub		di,1	 ;di=r-1
   143 00000099 BA0000                  	mov		dx,0  	;dx ser� a vari�vel x. cx � a variavel y
   144                                  	
   145                                  ;aqui em cima a l�gica foi invertida, 1-r => r-1
   146                                  ;e as compara��es passaram a ser jl => jg, assim garante 
   147                                  ;valores positivos para d
   148                                  
   149                                  stay:				;loop
   150 0000009C 89FE                    	mov		si,di
   151 0000009E 81FE0000                	cmp		si,0
   152 000000A2 7F0E                    	jg		inf       ;caso d for menor que 0, seleciona pixel superior (n�o  salta)
   153 000000A4 89D6                    	mov		si,dx		;o jl � importante porque trata-se de conta com sinal
   154 000000A6 D1E6                    	sal		si,1		;multiplica por doi (shift arithmetic left)
   155 000000A8 81C60300                	add		si,3
   156 000000AC 01F7                    	add		di,si     ;nesse ponto d=d+2*dx+3
   157 000000AE 42                      	inc		dx		;incrementa dx
   158 000000AF E90E00                  	jmp		plotar
   159                                  inf:	
   160 000000B2 89D6                    	mov		si,dx
   161 000000B4 29CE                    	sub		si,cx  		;faz x - y (dx-cx), e salva em di 
   162 000000B6 D1E6                    	sal		si,1
   163 000000B8 81C60500                	add		si,5
   164 000000BC 01F7                    	add		di,si		;nesse ponto d=d+2*(dx-cx)+5
   165 000000BE 42                      	inc		dx		;incrementa x (dx)
   166 000000BF 49                      	dec		cx		;decrementa y (cx)
   167                                  	
   168                                  plotar:	
   169 000000C0 89D6                    	mov		si,dx
   170 000000C2 01C6                    	add		si,ax
   171 000000C4 56                      	push    si			;coloca a abcisa x+xc na pilha
   172 000000C5 89CE                    	mov		si,cx
   173 000000C7 01DE                    	add		si,bx
   174 000000C9 56                      	push    si			;coloca a ordenada y+yc na pilha
   175 000000CA E868FF                  	call plot_xy		;toma conta do segundo octante
   176 000000CD 89C6                    	mov		si,ax
   177 000000CF 01D6                    	add		si,dx
   178 000000D1 56                      	push    si			;coloca a abcisa xc+x na pilha
   179 000000D2 89DE                    	mov		si,bx
   180 000000D4 29CE                    	sub		si,cx
   181 000000D6 56                      	push    si			;coloca a ordenada yc-y na pilha
   182 000000D7 E85BFF                  	call plot_xy		;toma conta do s�timo octante
   183 000000DA 89C6                    	mov		si,ax
   184 000000DC 01CE                    	add		si,cx
   185 000000DE 56                      	push    si			;coloca a abcisa xc+y na pilha
   186 000000DF 89DE                    	mov		si,bx
   187 000000E1 01D6                    	add		si,dx
   188 000000E3 56                      	push    si			;coloca a ordenada yc+x na pilha
   189 000000E4 E84EFF                  	call plot_xy		;toma conta do segundo octante
   190 000000E7 89C6                    	mov		si,ax
   191 000000E9 01CE                    	add		si,cx
   192 000000EB 56                      	push    si			;coloca a abcisa xc+y na pilha
   193 000000EC 89DE                    	mov		si,bx
   194 000000EE 29D6                    	sub		si,dx
   195 000000F0 56                      	push    si			;coloca a ordenada yc-x na pilha
   196 000000F1 E841FF                  	call plot_xy		;toma conta do oitavo octante
   197 000000F4 89C6                    	mov		si,ax
   198 000000F6 29D6                    	sub		si,dx
   199 000000F8 56                      	push    si			;coloca a abcisa xc-x na pilha
   200 000000F9 89DE                    	mov		si,bx
   201 000000FB 01CE                    	add		si,cx
   202 000000FD 56                      	push    si			;coloca a ordenada yc+y na pilha
   203 000000FE E834FF                  	call plot_xy		;toma conta do terceiro octante
   204 00000101 89C6                    	mov		si,ax
   205 00000103 29D6                    	sub		si,dx
   206 00000105 56                      	push    si			;coloca a abcisa xc-x na pilha
   207 00000106 89DE                    	mov		si,bx
   208 00000108 29CE                    	sub		si,cx
   209 0000010A 56                      	push    si			;coloca a ordenada yc-y na pilha
   210 0000010B E827FF                  	call plot_xy		;toma conta do sexto octante
   211 0000010E 89C6                    	mov		si,ax
   212 00000110 29CE                    	sub		si,cx
   213 00000112 56                      	push    si			;coloca a abcisa xc-y na pilha
   214 00000113 89DE                    	mov		si,bx
   215 00000115 29D6                    	sub		si,dx
   216 00000117 56                      	push    si			;coloca a ordenada yc-x na pilha
   217 00000118 E81AFF                  	call plot_xy		;toma conta do quinto octante
   218 0000011B 89C6                    	mov		si,ax
   219 0000011D 29CE                    	sub		si,cx
   220 0000011F 56                      	push    si			;coloca a abcisa xc-y na pilha
   221 00000120 89DE                    	mov		si,bx
   222 00000122 01D6                    	add		si,dx
   223 00000124 56                      	push    si			;coloca a ordenada yc-x na pilha
   224 00000125 E80DFF                  	call plot_xy		;toma conta do quarto octante
   225                                  	
   226 00000128 39D1                    	cmp		cx,dx
   227 0000012A 7203                    	jb		fim_circle  ;se cx (y) est� abaixo de dx (x), termina     
   228 0000012C E96DFF                  	jmp		stay		;se cx (y) est� acima de dx (x), continua no loop
   229                                  	
   230                                  	
   231                                  fim_circle:
   232 0000012F 5F                      	pop		di
   233 00000130 5E                      	pop		si
   234 00000131 5A                      	pop		dx
   235 00000132 59                      	pop		cx
   236 00000133 5B                      	pop		bx
   237 00000134 58                      	pop		ax
   238 00000135 9D                      	popf
   239 00000136 5D                      	pop		bp
   240 00000137 C20600                  	ret		6
   241                                  ;-----------------------------------------------------------------------------
   242                                  ;    fun��o full_circle
   243                                  ;	 push xc; push yc; push r; call full_circle;  (xc+r<639,yc+r<479)e(xc-r>0,yc-r>0)
   244                                  ; cor definida na variavel cor					  
   245                                  full_circle:
   246 0000013A 55                      	push 	bp
   247 0000013B 89E5                    	mov	 	bp,sp
   248 0000013D 9C                      	pushf                        ;coloca os flags na pilha
   249 0000013E 50                      	push 	ax
   250 0000013F 53                      	push 	bx
   251 00000140 51                      	push	cx
   252 00000141 52                      	push	dx
   253 00000142 56                      	push	si
   254 00000143 57                      	push	di
   255                                  
   256 00000144 8B4608                  	mov		ax,[bp+8]    ; resgata xc
   257 00000147 8B5E06                  	mov		bx,[bp+6]    ; resgata yc
   258 0000014A 8B4E04                  	mov		cx,[bp+4]    ; resgata r
   259                                  	
   260 0000014D 89DE                    	mov		si,bx
   261 0000014F 29CE                    	sub		si,cx
   262 00000151 50                      	push    ax			;coloca xc na pilha			
   263 00000152 56                      	push	si			;coloca yc-r na pilha
   264 00000153 89DE                    	mov		si,bx
   265 00000155 01CE                    	add		si,cx
   266 00000157 50                      	push	ax		;coloca xc na pilha
   267 00000158 56                      	push	si		;coloca yc+r na pilha
   268 00000159 E89B00                  	call line
   269                                  	
   270                                  		
   271 0000015C 89CF                    	mov		di,cx
   272 0000015E 81EF0100                	sub		di,1	 ;di=r-1
   273 00000162 BA0000                  	mov		dx,0  	;dx ser� a vari�vel x. cx � a variavel y
   274                                  	
   275                                  ;aqui em cima a l�gica foi invertida, 1-r => r-1
   276                                  ;e as compara��es passaram a ser jl => jg, assim garante 
   277                                  ;valores positivos para d
   278                                  
   279                                  stay_full:				;loop
   280 00000165 89FE                    	mov		si,di
   281 00000167 81FE0000                	cmp		si,0
   282 0000016B 7F0E                    	jg		inf_full       ;caso d for menor que 0, seleciona pixel superior (n�o  salta)
   283 0000016D 89D6                    	mov		si,dx		;o jl � importante porque trata-se de conta com sinal
   284 0000016F D1E6                    	sal		si,1		;multiplica por doi (shift arithmetic left)
   285 00000171 81C60300                	add		si,3
   286 00000175 01F7                    	add		di,si     ;nesse ponto d=d+2*dx+3
   287 00000177 42                      	inc		dx		;incrementa dx
   288 00000178 E90E00                  	jmp		plotar_full
   289                                  inf_full:	
   290 0000017B 89D6                    	mov		si,dx
   291 0000017D 29CE                    	sub		si,cx  		;faz x - y (dx-cx), e salva em di 
   292 0000017F D1E6                    	sal		si,1
   293 00000181 81C60500                	add		si,5
   294 00000185 01F7                    	add		di,si		;nesse ponto d=d+2*(dx-cx)+5
   295 00000187 42                      	inc		dx		;incrementa x (dx)
   296 00000188 49                      	dec		cx		;decrementa y (cx)
   297                                  	
   298                                  plotar_full:	
   299 00000189 89C6                    	mov		si,ax
   300 0000018B 01CE                    	add		si,cx
   301 0000018D 56                      	push	si		;coloca a abcisa y+xc na pilha			
   302 0000018E 89DE                    	mov		si,bx
   303 00000190 29D6                    	sub		si,dx
   304 00000192 56                      	push    si		;coloca a ordenada yc-x na pilha
   305 00000193 89C6                    	mov		si,ax
   306 00000195 01CE                    	add		si,cx
   307 00000197 56                      	push	si		;coloca a abcisa y+xc na pilha	
   308 00000198 89DE                    	mov		si,bx
   309 0000019A 01D6                    	add		si,dx
   310 0000019C 56                      	push    si		;coloca a ordenada yc+x na pilha	
   311 0000019D E85700                  	call 	line
   312                                  	
   313 000001A0 89C6                    	mov		si,ax
   314 000001A2 01D6                    	add		si,dx
   315 000001A4 56                      	push	si		;coloca a abcisa xc+x na pilha			
   316 000001A5 89DE                    	mov		si,bx
   317 000001A7 29CE                    	sub		si,cx
   318 000001A9 56                      	push    si		;coloca a ordenada yc-y na pilha
   319 000001AA 89C6                    	mov		si,ax
   320 000001AC 01D6                    	add		si,dx
   321 000001AE 56                      	push	si		;coloca a abcisa xc+x na pilha	
   322 000001AF 89DE                    	mov		si,bx
   323 000001B1 01CE                    	add		si,cx
   324 000001B3 56                      	push    si		;coloca a ordenada yc+y na pilha	
   325 000001B4 E84000                  	call	line
   326                                  	
   327 000001B7 89C6                    	mov		si,ax
   328 000001B9 29D6                    	sub		si,dx
   329 000001BB 56                      	push	si		;coloca a abcisa xc-x na pilha			
   330 000001BC 89DE                    	mov		si,bx
   331 000001BE 29CE                    	sub		si,cx
   332 000001C0 56                      	push    si		;coloca a ordenada yc-y na pilha
   333 000001C1 89C6                    	mov		si,ax
   334 000001C3 29D6                    	sub		si,dx
   335 000001C5 56                      	push	si		;coloca a abcisa xc-x na pilha	
   336 000001C6 89DE                    	mov		si,bx
   337 000001C8 01CE                    	add		si,cx
   338 000001CA 56                      	push    si		;coloca a ordenada yc+y na pilha	
   339 000001CB E82900                  	call	line
   340                                  	
   341 000001CE 89C6                    	mov		si,ax
   342 000001D0 29CE                    	sub		si,cx
   343 000001D2 56                      	push	si		;coloca a abcisa xc-y na pilha			
   344 000001D3 89DE                    	mov		si,bx
   345 000001D5 29D6                    	sub		si,dx
   346 000001D7 56                      	push    si		;coloca a ordenada yc-x na pilha
   347 000001D8 89C6                    	mov		si,ax
   348 000001DA 29CE                    	sub		si,cx
   349 000001DC 56                      	push	si		;coloca a abcisa xc-y na pilha	
   350 000001DD 89DE                    	mov		si,bx
   351 000001DF 01D6                    	add		si,dx
   352 000001E1 56                      	push    si		;coloca a ordenada yc+x na pilha	
   353 000001E2 E81200                  	call	line
   354                                  	
   355 000001E5 39D1                    	cmp		cx,dx
   356 000001E7 7203                    	jb		fim_full_circle  ;se cx (y) est� abaixo de dx (x), termina     
   357 000001E9 E979FF                  	jmp		stay_full		;se cx (y) est� acima de dx (x), continua no loop
   358                                  	
   359                                  	
   360                                  fim_full_circle:
   361 000001EC 5F                      	pop		di
   362 000001ED 5E                      	pop		si
   363 000001EE 5A                      	pop		dx
   364 000001EF 59                      	pop		cx
   365 000001F0 5B                      	pop		bx
   366 000001F1 58                      	pop		ax
   367 000001F2 9D                      	popf
   368 000001F3 5D                      	pop		bp
   369 000001F4 C20600                  	ret		6
   370                                  ;-----------------------------------------------------------------------------
   371                                  ;
   372                                  ;   fun��o line
   373                                  ;
   374                                  ; push x1; push y1; push x2; push y2; call line;  (x<639, y<479)
   375                                  line:
   376 000001F7 55                      		push		bp
   377 000001F8 89E5                    		mov		bp,sp
   378 000001FA 9C                      		pushf                        ;coloca os flags na pilha
   379 000001FB 50                      		push 		ax
   380 000001FC 53                      		push 		bx
   381 000001FD 51                      		push		cx
   382 000001FE 52                      		push		dx
   383 000001FF 56                      		push		si
   384 00000200 57                      		push		di
   385 00000201 8B460A                  		mov		ax,[bp+10]   ; resgata os valores das coordenadas
   386 00000204 8B5E08                  		mov		bx,[bp+8]    ; resgata os valores das coordenadas
   387 00000207 8B4E06                  		mov		cx,[bp+6]    ; resgata os valores das coordenadas
   388 0000020A 8B5604                  		mov		dx,[bp+4]    ; resgata os valores das coordenadas
   389 0000020D 39C8                    		cmp		ax,cx
   390 0000020F 7408                    		je		line2
   391 00000211 721C                    		jb		line1
   392 00000213 91                      		xchg		ax,cx
   393 00000214 87DA                    		xchg		bx,dx
   394 00000216 E91600                  		jmp		line1
   395                                  line2:		; deltax=0
   396 00000219 39D3                    		cmp		bx,dx  ;subtrai dx de bx
   397 0000021B 7202                    		jb		line3
   398 0000021D 87DA                    		xchg		bx,dx        ;troca os valores de bx e dx entre eles
   399                                  line3:	; dx > bx
   400 0000021F 50                      		push		ax
   401 00000220 53                      		push		bx
   402 00000221 E811FE                  		call 		plot_xy
   403 00000224 39D3                    		cmp		bx,dx
   404 00000226 7503                    		jne		line31
   405 00000228 E9C600                  		jmp		fim_line
   406 0000022B 43                      line31:		inc		bx
   407 0000022C E9F0FF                  		jmp		line3
   408                                  ;deltax <>0
   409                                  line1:
   410                                  ; comparar m�dulos de deltax e deltay sabendo que cx>ax
   411                                  	; cx > ax
   412 0000022F 51                      		push		cx
   413 00000230 29C1                    		sub		cx,ax
   414 00000232 890E[0700]              		mov		[deltax],cx
   415 00000236 59                      		pop		cx
   416 00000237 52                      		push		dx
   417 00000238 29DA                    		sub		dx,bx
   418 0000023A 7702                    		ja		line32
   419 0000023C F7DA                    		neg		dx
   420                                  line32:		
   421 0000023E 8916[0900]              		mov		[deltay],dx
   422 00000242 5A                      		pop		dx
   423                                  
   424 00000243 50                      		push		ax
   425 00000244 A1[0700]                		mov		ax,[deltax]
   426 00000247 3B06[0900]              		cmp		ax,[deltay]
   427 0000024B 58                      		pop		ax
   428 0000024C 724D                    		jb		line5
   429                                  
   430                                  	; cx > ax e deltax>deltay
   431 0000024E 51                      		push		cx
   432 0000024F 29C1                    		sub		cx,ax
   433 00000251 890E[0700]              		mov		[deltax],cx
   434 00000255 59                      		pop		cx
   435 00000256 52                      		push		dx
   436 00000257 29DA                    		sub		dx,bx
   437 00000259 8916[0900]              		mov		[deltay],dx
   438 0000025D 5A                      		pop		dx
   439                                  
   440 0000025E 89C6                    		mov		si,ax
   441                                  line4:
   442 00000260 50                      		push		ax
   443 00000261 52                      		push		dx
   444 00000262 56                      		push		si
   445 00000263 29C6                    		sub		si,ax	;(x-x1)
   446 00000265 A1[0900]                		mov		ax,[deltay]
   447 00000268 F7EE                    		imul		si
   448 0000026A 8B36[0700]              		mov		si,[deltax]		;arredondar
   449 0000026E D1EE                    		shr		si,1
   450                                  ; se numerador (DX)>0 soma se <0 subtrai
   451 00000270 81FA0000                		cmp		dx,0
   452 00000274 7C09                    		jl		ar1
   453 00000276 01F0                    		add		ax,si
   454 00000278 81D20000                		adc		dx,0
   455 0000027C E90600                  		jmp		arc1
   456 0000027F 29F0                    ar1:		sub		ax,si
   457 00000281 81DA0000                		sbb		dx,0
   458                                  arc1:
   459 00000285 F73E[0700]              		idiv		word [deltax]
   460 00000289 01D8                    		add		ax,bx
   461 0000028B 5E                      		pop		si
   462 0000028C 56                      		push		si
   463 0000028D 50                      		push		ax
   464 0000028E E8A4FD                  		call		plot_xy
   465 00000291 5A                      		pop		dx
   466 00000292 58                      		pop		ax
   467 00000293 39CE                    		cmp		si,cx
   468 00000295 745A                    		je		fim_line
   469 00000297 46                      		inc		si
   470 00000298 E9C5FF                  		jmp		line4
   471                                  
   472 0000029B 39D3                    line5:		cmp		bx,dx
   473 0000029D 7203                    		jb 		line7
   474 0000029F 91                      		xchg		ax,cx
   475 000002A0 87DA                    		xchg		bx,dx
   476                                  line7:
   477 000002A2 51                      		push		cx
   478 000002A3 29C1                    		sub		cx,ax
   479 000002A5 890E[0700]              		mov		[deltax],cx
   480 000002A9 59                      		pop		cx
   481 000002AA 52                      		push		dx
   482 000002AB 29DA                    		sub		dx,bx
   483 000002AD 8916[0900]              		mov		[deltay],dx
   484 000002B1 5A                      		pop		dx
   485                                  
   486                                  
   487                                  
   488 000002B2 89DE                    		mov		si,bx
   489                                  line6:
   490 000002B4 52                      		push		dx
   491 000002B5 56                      		push		si
   492 000002B6 50                      		push		ax
   493 000002B7 29DE                    		sub		si,bx	;(y-y1)
   494 000002B9 A1[0700]                		mov		ax,[deltax]
   495 000002BC F7EE                    		imul		si
   496 000002BE 8B36[0900]              		mov		si,[deltay]		;arredondar
   497 000002C2 D1EE                    		shr		si,1
   498                                  ; se numerador (DX)>0 soma se <0 subtrai
   499 000002C4 81FA0000                		cmp		dx,0
   500 000002C8 7C09                    		jl		ar2
   501 000002CA 01F0                    		add		ax,si
   502 000002CC 81D20000                		adc		dx,0
   503 000002D0 E90600                  		jmp		arc2
   504 000002D3 29F0                    ar2:		sub		ax,si
   505 000002D5 81DA0000                		sbb		dx,0
   506                                  arc2:
   507 000002D9 F73E[0900]              		idiv		word [deltay]
   508 000002DD 89C7                    		mov		di,ax
   509 000002DF 58                      		pop		ax
   510 000002E0 01C7                    		add		di,ax
   511 000002E2 5E                      		pop		si
   512 000002E3 57                      		push		di
   513 000002E4 56                      		push		si
   514 000002E5 E84DFD                  		call		plot_xy
   515 000002E8 5A                      		pop		dx
   516 000002E9 39D6                    		cmp		si,dx
   517 000002EB 7404                    		je		fim_line
   518 000002ED 46                      		inc		si
   519 000002EE E9C3FF                  		jmp		line6
   520                                  
   521                                  fim_line:
   522 000002F1 5F                      		pop		di
   523 000002F2 5E                      		pop		si
   524 000002F3 5A                      		pop		dx
   525 000002F4 59                      		pop		cx
   526 000002F5 5B                      		pop		bx
   527 000002F6 58                      		pop		ax
   528 000002F7 9D                      		popf
   529 000002F8 5D                      		pop		bp
   530 000002F9 C20800                  		ret		8
   531                                  ;*******************************************************************
   532                                  segment data
   533                                  
   534 00000000 0F00                    	cor		dw		branco_intenso
   535                                  
   536                                  ;	I R G B COR
   537                                  ;	0 0 0 0 preto
   538                                  ;	0 0 0 1 azul
   539                                  ;	0 0 1 0 verde
   540                                  ;	0 0 1 1 cyan
   541                                  ;	0 1 0 0 vermelho
   542                                  ;	0 1 0 1 magenta
   543                                  ;	0 1 1 0 marrom
   544                                  ;	0 1 1 1 branco
   545                                  ;	1 0 0 0 cinza
   546                                  ;	1 0 0 1 azul claro
   547                                  ;	1 0 1 0 verde claro
   548                                  ;	1 0 1 1 cyan claro
   549                                  ;	1 1 0 0 rosa
   550                                  ;	1 1 0 1 magenta claro
   551                                  ;	1 1 1 0 amarelo
   552                                  ;	1 1 1 1 branco intenso
   553                                  
   554                                  	preto		equ		0
   555                                  	azul		equ		1
   556                                  	verde		equ		2
   557                                  	cyan		equ		3
   558                                  	vermelho	equ		4
   559                                  	magenta		equ		5
   560                                  	marrom		equ		6
   561                                  	branco		equ		7
   562                                  	cinza		equ		8
   563                                  	azul_claro	equ		9
   564                                  	verde_claro	equ		10
   565                                  	cyan_claro	equ		11
   566                                  	rosa		equ		12
   567                                  	magenta_claro	equ		13
   568                                  	amarelo		equ		14
   569                                  	branco_intenso	equ		15
   570                                  
   571 00000002 00                      	modo_anterior	db		0
   572 00000003 0000                    	linha   	dw  		0
   573 00000005 0000                    	coluna  	dw  		0
   574 00000007 0000                    	deltax		dw		0
   575 00000009 0000                    	deltay		dw		0	
   576 0000000B 46756E63616F204772-     	mens    	db  		'Funcao Grafica'
   577 00000014 6166696361         
   578                                  ;*************************************************************************
   579                                  segment stack stack
   580 00000000 <res 00000200>          	resb 		512
   581                                  stacktop:
